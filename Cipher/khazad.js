/*
 *  Khazad Class
 *  (c)2006 Hawkynt
 *
 *  Attributes:
 *   szName                            --> Name of Cipher
 *   szInternalName                    --> Short Name of Cipher for internal use
 *   szCommment                        --> a comment for the Cipher
 *   intMinKeyLength                   --> Minimum Key Size in Bytes
 *   intMaxKeyLength                   --> Maximum Key Size in Bytes
 *   intStepKeyLength                  --> Key Steps in Bytes
 *   intMinBlockSize                   --> Minimum Block Size in Bytes
 *   intMaxBlockSize                   --> Maximum Block Size in Bytes
 *   intStepBlockSize                  --> Block Size Steps in Bytes
 *   arrInstances                      --> Instances of Cipher in use
 *   boolCantDecode                    --> No Decoding Routine Present
 *   boolInit                          --> is true if Algo has been initialized once
 *
 *  Methods:
 *   Init()                            --> Initializes the Algo
 *   KeySetup(szKey):szID              --> returns szID of Algos internal Object after creating it
 *   EncryptBlock(szID,szBlock):String --> Encrypt a Block
 *   DecryptBlock(szID,szBlock):String --> Decrypt a Block
 *   ClearData(szID)                   --> deletes an Algos Object
 */
if (!window.XObjectInstances) window.XObjectInstances=[];
var Khazad=new Object();
{
  // =======================[ PUBLIC INTERFACE ]========================
  Khazad.szInternalName='Khazad';
  Khazad.szName='Khazad';
  Khazad.szComment='This is an implementation of the tweaked Khazad Cipher Algorithm from http://paginas.terra.com.br/informatica/paulobarreto/KhazadPage.html';
  Khazad.intMinKeyLength=16;
  Khazad.intMaxKeyLength=16;
  Khazad.intStepKeyLength=1;
  Khazad.intMinBlockSize=8;
  Khazad.intMaxBlockSize=8;
  Khazad.intStepBlockSize=1;
  Khazad.arrInstances=[];
  
  Khazad.boolCantDecode=false;
  Khazad.boolInit=false;
  // =======================[ PRIVATE STATIC ]==========================
  Khazad.intRounds=8;
  // =======================[ PUBLIC STATIC ]===========================
  Khazad.Init=function () {
    Khazad.boolInit=true;
  }
  
  Khazad.KeySetup=function (optional_szKey) {
    var szID;
    do {
      szID='Khazad['+szGenerateUniqueID()+']';
    } while ((Khazad.arrInstances[szID]) || (Khazad.arrInstances[szID]!=undefined) || (window.XObjectInstances[szID]) || (window.XObjectInstances[szID]!=undefined));
    Khazad.arrInstances[szID]=new Khazad.classKhazad(optional_szKey);
    return (szID);
  }
  
  Khazad.ClearData=function (szID) {
    if ((Khazad.arrInstances[szID]) && (Khazad.arrInstances[szID]!=undefined)) {
      window.XObjectInstances[szID]=undefined;
      delete Khazad.arrInstances[szID];
      return (true);
    } else {
      throwException('Unknown Object Reference Exception',szID,'Khazad','ClearData');
      return (false);
    };
  }
  
  Khazad.szEncryptBlock=function (szID,szPlainText) {
    if ((Khazad.arrInstances[szID]) && (Khazad.arrInstances[szID]!=undefined)) {
      return (Khazad.Crypt(szPlainText,Khazad.arrInstances[szID].arrRoundKeyEnc));
    } else {
      throwException('Unknown Object Reference Exception',szID,'Khazad','szEncryptBlock');
    };
  }
  
  Khazad.szDecryptBlock=function (szID,szCipherText) {
    if ((Khazad.arrInstances[szID]) && (Khazad.arrInstances[szID]!=undefined)) {
      return (Khazad.Crypt(szCipherText,Khazad.arrInstances[szID].arrRoundKeyDec));
    } else {
      throwException('Unknown Object Reference Exception',szID,'Khazad','szEncryptBlock');
    };
  }
  // =======================[ PRIVATE FUNCTIONS ]=======================
  // Encrypts or decrypts a 8 Byte Block
  Khazad.Crypt=function (szText,arrRoundKey) {
    var szRet='';
    // Crypt
    var intR;
    var intS0;
    var intS1;
    var intT0;
    var intT1;
    // map plaintext block to cipher state (mu)
    // and add initial round key (sigma[K^0]):
    intS0 =
      ((szText.charCodeAt(0) & 0xff) << 24) ^
      ((szText.charCodeAt(1) & 0xff) << 16) ^
      ((szText.charCodeAt(2) & 0xff) <<  8) ^
      ((szText.charCodeAt(3) & 0xff)      ) ^
      arrRoundKey[0][0];
    intS1 =
      ((szText.charCodeAt(4) & 0xff) << 24) ^
      ((szText.charCodeAt(5) & 0xff) << 16) ^
      ((szText.charCodeAt(6) & 0xff) <<  8) ^
      ((szText.charCodeAt(7) & 0xff)      ) ^
      arrRoundKey[0][1];
    // R - 1 full rounds:
    for (intR = 1; intR < Khazad.intRounds; intR++) {
      intT0 =
        Khazad.arrU0[(intS0 >> 24) & 0xff] ^
        Khazad.arrU1[(intS0 >> 16) & 0xff] ^
        Khazad.arrU2[(intS0 >>  8) & 0xff] ^
        Khazad.arrU3[(intS0      ) & 0xff] ^
        Khazad.arrV0[(intS1 >> 24) & 0xff] ^
        Khazad.arrV1[(intS1 >> 16) & 0xff] ^
        Khazad.arrV2[(intS1 >>  8) & 0xff] ^
        Khazad.arrV3[(intS1      ) & 0xff] ^
        arrRoundKey[intR][0];
      intT1 =
        Khazad.arrU0[(intS1 >> 24) & 0xff] ^
        Khazad.arrU1[(intS1 >> 16) & 0xff] ^
        Khazad.arrU2[(intS1 >>  8) & 0xff] ^
        Khazad.arrU3[(intS1      ) & 0xff] ^
        Khazad.arrV0[(intS0 >> 24) & 0xff] ^
        Khazad.arrV1[(intS0 >> 16) & 0xff] ^
        Khazad.arrV2[(intS0 >>  8) & 0xff] ^
        Khazad.arrV3[(intS0      ) & 0xff] ^
        arrRoundKey[intR][1];
      intS0 = intT0;
      intS1 = intT1;
    };
    // last round:
    intS0 =
      (Khazad.arrU0[(intS0 >> 24) & 0xff] & 0xff000000) ^
      (Khazad.arrU1[(intS0 >> 16) & 0xff] & 0x00ff0000) ^
      (Khazad.arrU2[(intS0 >>  8) & 0xff] & 0x0000ff00) ^
      (Khazad.arrU3[(intS0      ) & 0xff] & 0x000000ff) ^
      arrRoundKey[Khazad.intRounds][0];
    intS1 =
      (Khazad.arrU0[(intS1 >> 24) & 0xff] & 0xff000000) ^
      (Khazad.arrU1[(intS1 >> 16) & 0xff] & 0x00ff0000) ^
      (Khazad.arrU2[(intS1 >>  8) & 0xff] & 0x0000ff00) ^
      (Khazad.arrU3[(intS1      ) & 0xff] & 0x000000ff) ^
      arrRoundKey[Khazad.intRounds][1];
    // map cipher state to ciphertext block (mu^{-1}):
    szRet+=String.fromCharCode((intS0 >> 24) & 0xff);
    szRet+=String.fromCharCode((intS0 >> 16) & 0xff);
    szRet+=String.fromCharCode((intS0 >>  8) & 0xff);
    szRet+=String.fromCharCode((intS0      ) & 0xff);
    szRet+=String.fromCharCode((intS1 >> 24) & 0xff);
    szRet+=String.fromCharCode((intS1 >> 16) & 0xff);
    szRet+=String.fromCharCode((intS1 >>  8) & 0xff);
    szRet+=String.fromCharCode((intS1      ) & 0xff);
    
    return (szRet);
  }
  // =======================[ PRIVATE CLASS ]===========================
  Khazad.classKhazad=function (szKey) {
    // Make Key Setup
    // proceed
    var intR;
    this.arrRoundKeyEnc = []; // [Khazad.intRounds+1]
    for (intR=0;intR<(Khazad.intRounds+1);intR++) {
      this.arrRoundKeyEnc[intR]=[]; // [2]
    }; // int[intR  + 1][2];
    this.arrRoundKeyDec = []; // [Khazad.intRounds+1]
    for (intR=0;intR<(Khazad.intRounds+1);intR++) {
      this.arrRoundKeyDec[intR]=[]; // [2]
    }; // int[intR  + 1][2];
    var arrS=Khazad.arrU3;
    // map u8 array cipher key to initial key state (mu):
    var intK20=
      ((szKey.charCodeAt( 0) & 0xff) << 24) ^
      ((szKey.charCodeAt( 1) & 0xff) << 16) ^
      ((szKey.charCodeAt( 2) & 0xff) <<  8) ^
      ((szKey.charCodeAt( 3) & 0xff)      );
    var intK21 =
      ((szKey.charCodeAt( 4) & 0xff) << 24) ^
      ((szKey.charCodeAt( 5) & 0xff) << 16) ^
      ((szKey.charCodeAt( 6) & 0xff) <<  8) ^
      ((szKey.charCodeAt( 7) & 0xff)      );
    var intK10 =
      ((szKey.charCodeAt( 8) & 0xff) << 24) ^
      ((szKey.charCodeAt( 9) & 0xff) << 16) ^
      ((szKey.charCodeAt(10) & 0xff) <<  8) ^
      ((szKey.charCodeAt(11) & 0xff)      );
    var intK11 =
      ((szKey.charCodeAt(12) & 0xff) << 24) ^
      ((szKey.charCodeAt(13) & 0xff) << 16) ^
      ((szKey.charCodeAt(14) & 0xff) <<  8) ^
      ((szKey.charCodeAt(15) & 0xff)      );
    // compute the round keys:
    for (intR = 0; intR <= Khazad.intRounds; intR++) {
      // K[intR] = rho(c[intR], K1) ^ K2;
      this.arrRoundKeyEnc[intR][0] =
        Khazad.arrU0[(intK10 >> 24) & 0xff] ^
        Khazad.arrU1[(intK10 >> 16) & 0xff] ^
        Khazad.arrU2[(intK10 >>  8) & 0xff] ^
        Khazad.arrU3[(intK10      ) & 0xff] ^
        Khazad.arrV0[(intK11 >> 24) & 0xff] ^
        Khazad.arrV1[(intK11 >> 16) & 0xff] ^
        Khazad.arrV2[(intK11 >>  8) & 0xff] ^
        Khazad.arrV3[(intK11      ) & 0xff] ^
        Khazad.arrC[intR][0] ^ intK20;
      this.arrRoundKeyEnc[intR][1] =
        Khazad.arrU0[(intK11 >> 24) & 0xff] ^
        Khazad.arrU1[(intK11 >> 16) & 0xff] ^
        Khazad.arrU2[(intK11 >>  8) & 0xff] ^
        Khazad.arrU3[(intK11      ) & 0xff] ^
        Khazad.arrV0[(intK10 >> 24) & 0xff] ^
        Khazad.arrV1[(intK10 >> 16) & 0xff] ^
        Khazad.arrV2[(intK10 >>  8) & 0xff] ^
        Khazad.arrV3[(intK10      ) & 0xff] ^
        Khazad.arrC[intR][1] ^ intK21;
      intK20 = intK10;
      intK21 = intK11;
      intK10 = this.arrRoundKeyEnc[intR][0];
      intK11 = this.arrRoundKeyEnc[intR][1];
    };
    // compute the inverse key schedule:
    // K'^0 = K^R, K'^R = K^0, K'^r = theta(K^{R-r})
    this.arrRoundKeyDec[0][0] = this.arrRoundKeyEnc[Khazad.intRounds][0];
    this.arrRoundKeyDec[0][1] = this.arrRoundKeyEnc[Khazad.intRounds][1];
    for (intR = 1; intR < Khazad.intRounds; intR++) {
      intK10 = this.arrRoundKeyEnc[Khazad.intRounds - intR][0];
      intK11 = this.arrRoundKeyEnc[Khazad.intRounds - intR][1];
      this.arrRoundKeyDec[intR][0] =
        Khazad.arrU0[arrS[(intK10 >> 24) & 0xff] & 0xff] ^
        Khazad.arrU1[arrS[(intK10 >> 16) & 0xff] & 0xff] ^
        Khazad.arrU2[arrS[(intK10 >>  8) & 0xff] & 0xff] ^
        Khazad.arrU3[arrS[(intK10      ) & 0xff] & 0xff] ^
        Khazad.arrV0[arrS[(intK11 >> 24) & 0xff] & 0xff] ^
        Khazad.arrV1[arrS[(intK11 >> 16) & 0xff] & 0xff] ^
        Khazad.arrV2[arrS[(intK11 >>  8) & 0xff] & 0xff] ^
        Khazad.arrV3[arrS[(intK11      ) & 0xff] & 0xff];
      this.arrRoundKeyDec[intR][1] =
        Khazad.arrU0[arrS[(intK11 >> 24) & 0xff] & 0xff] ^
        Khazad.arrU1[arrS[(intK11 >> 16) & 0xff] & 0xff] ^
        Khazad.arrU2[arrS[(intK11 >>  8) & 0xff] & 0xff] ^
        Khazad.arrU3[arrS[(intK11      ) & 0xff] & 0xff] ^
        Khazad.arrV0[arrS[(intK10 >> 24) & 0xff] & 0xff] ^
        Khazad.arrV1[arrS[(intK10 >> 16) & 0xff] & 0xff] ^
        Khazad.arrV2[arrS[(intK10 >>  8) & 0xff] & 0xff] ^
        Khazad.arrV3[arrS[(intK10      ) & 0xff] & 0xff];
    };
    this.arrRoundKeyDec[Khazad.intRounds][0] = this.arrRoundKeyEnc[0][0];
    this.arrRoundKeyDec[Khazad.intRounds][1] = this.arrRoundKeyEnc[0][1];
  }
  // ==============[ S-BOX, U-BOX, V-BOX, P-BOX and C-BOX DATA ]========
  Khazad.arrU0=[
    0xbad3d268, 0x54fc4d19, 0x2f71bc93, 0x749ccdb9,
    0x53f55102, 0xd3686bb8, 0xd26b6fbd, 0x4dd72964,
    0x50f05d0d, 0xace98a26, 0x8d8a0e83, 0xbfdcc679,
    0x7090ddad, 0x52f65507, 0x9ab352c8, 0x4cd42d61,
    0xea238f65, 0xd56273a6, 0x97a466f1, 0xd16e63b2,
    0x3355ccff, 0x51f35908, 0x5bed712a, 0xa6f7a204,
    0xde7f5f81, 0x48d83d75, 0xa8e59a32, 0x99b65ec7,
    0xdb704b90, 0x3256c8fa, 0xb7c4e651, 0xfc19d72b,
    0xe338ab48, 0x9ebf42dc, 0x91ae7eef, 0x9bb056cd,
    0xe23baf4d, 0xbbd0d66d, 0x41c31958, 0x6eb2a5cb,
    0xa5f2ae0b, 0xcb400bc0, 0x6bbdb1da, 0x95a26efb,
    0xa1febe1f, 0xf308eb18, 0xb1cefe4f, 0x0206080a,
    0xcc4917db, 0xc45137f3, 0x1d277469, 0x143c5044,
    0xc3582be8, 0x63a591f2, 0xda734f95, 0x5de76934,
    0x5fe1613e, 0xdc79578b, 0x7d87e994, 0xcd4a13de,
    0x7f81e19e, 0x5aee752f, 0x6cb4adc1, 0x5ce46d31,
    0xf704fb0c, 0x266a98be, 0xff1cdb24, 0xed2a937e,
    0xe825876f, 0x9dba4ed3, 0x6fb1a1ce, 0x8e8f028c,
    0x192b647d, 0xa0fdba1a, 0xf00de717, 0x89861e97,
    0x0f113c33, 0x07091c1b, 0xafec8629, 0xfb10cb30,
    0x08182028, 0x153f5441, 0x0d173439, 0x040c1014,
    0x01030405, 0x64ac8de9, 0xdf7c5b84, 0x769ac5b3,
    0x798bf980, 0xdd7a538e, 0x3d47f4c9, 0x163a584e,
    0x3f41fcc3, 0x3759dceb, 0x6db7a9c4, 0x3848e0d8,
    0xb9d6de67, 0x7395d1a2, 0xe926836a, 0x355fd4e1,
    0x55ff491c, 0x7193d9a8, 0x7b8df18a, 0x8c890a86,
    0x7296d5a7, 0x88851a92, 0xf607ff09, 0x2a7ea882,
    0x3e42f8c6, 0x5ee2653b, 0x27699cbb, 0x46ca0543,
    0x0c14303c, 0x65af89ec, 0x68b8bdd5, 0x61a399f8,
    0x03050c0f, 0xc15e23e2, 0x57f94116, 0xd6677fa9,
    0xd976439a, 0x58e87d25, 0xd875479f, 0x66aa85e3,
    0xd7647bac, 0x3a4ee8d2, 0xc84507cf, 0x3c44f0cc,
    0xfa13cf35, 0x96a762f4, 0xa7f4a601, 0x98b55ac2,
    0xec29977b, 0xb8d5da62, 0xc7543bfc, 0xaeef822c,
    0x69bbb9d0, 0x4bdd317a, 0xabe0963d, 0xa9e69e37,
    0x67a981e6, 0x0a1e2822, 0x47c90146, 0xf20bef1d,
    0xb5c2ee5b, 0x226688aa, 0xe532b356, 0xee2f9f71,
    0xbedfc27c, 0x2b7dac87, 0x819e3ebf, 0x1236485a,
    0x839836b5, 0x1b2d6c77, 0x0e123836, 0x23658caf,
    0xf502f306, 0x45cf094c, 0x216384a5, 0xce4f1fd1,
    0x49db3970, 0x2c74b09c, 0xf916c33a, 0xe637bf59,
    0xb6c7e254, 0x2878a088, 0x17395c4b, 0x829b32b0,
    0x1a2e6872, 0x8b80169d, 0xfe1fdf21, 0x8a831298,
    0x091b242d, 0xc94603ca, 0x879426a1, 0x4ed2256b,
    0xe13ea342, 0x2e72b896, 0xe431b753, 0xe03da747,
    0xeb208b60, 0x90ad7aea, 0xa4f1aa0e, 0x1e227866,
    0x85922eab, 0x60a09dfd, 0x00000000, 0x256f94b1,
    0xf401f703, 0xf10ee312, 0x94a16afe, 0x0b1d2c27,
    0xe734bb5c, 0x759fc9bc, 0xef2c9b74, 0x345cd0e4,
    0x3153c4f5, 0xd46177a3, 0xd06d67b7, 0x869722a4,
    0x7e82e59b, 0xadea8e23, 0xfd1ad32e, 0x297ba48d,
    0x3050c0f0, 0x3b4decd7, 0x9fbc46d9, 0xf815c73f,
    0xc6573ff9, 0x13354c5f, 0x060a181e, 0x050f1411,
    0xc55233f6, 0x11334455, 0x7799c1b6, 0x7c84ed91,
    0x7a8ef58f, 0x7888fd85, 0x365ad8ee, 0x1c24706c,
    0x394be4dd, 0x59eb7920, 0x18286078, 0x56fa4513,
    0xb3c8f645, 0xb0cdfa4a, 0x246c90b4, 0x206080a0,
    0xb2cbf240, 0x92ab72e0, 0xa3f8b615, 0xc05d27e7,
    0x44cc0d49, 0x62a695f7, 0x10304050, 0xb4c1ea5e,
    0x84912aae, 0x43c51152, 0x93a876e5, 0xc25b2fed,
    0x4ade357f, 0xbddace73, 0x8f8c0689, 0x2d77b499,
    0xbcd9ca76, 0x9cb94ad6, 0x6abeb5df, 0x40c01d5d,
    0xcf4c1bd4, 0xa2fbb210, 0x809d3aba, 0x4fd1216e,
    0x1f217c63, 0xca430fc5, 0xaae39238, 0x42c61557
  ];
  
  Khazad.arrV0 = [
    0xbbb96a01, 0xe59a66b1, 0xe26514cd, 0x25871b51,
    0xf7a257a4, 0xd0d6be03, 0xd6deb504, 0xb35285fe,
    0xfdba4aad, 0xcf09e063, 0x091c9684, 0xa5914d1a,
    0x3da7374d, 0xf1aa5ca3, 0x7ba417e1, 0xb55a8ef9,
    0x460320ac, 0xc4e68411, 0x55cc68c2, 0xdcc6a80d,
    0xaa85d099, 0xfbb241aa, 0xc7e20f9c, 0xf359ae55,
    0xfebec120, 0xad7aa2e5, 0xd729cc7f, 0x71bc0ae8,
    0xe096e63b, 0xac8ddb9e, 0x95d11522, 0x32b3aace,
    0x704b7393, 0x63843bfd, 0x41fc52d0, 0x7dac1ce6,
    0x76437894, 0xbdb16106, 0x9b32f1da, 0x7957e517,
    0xf941b35c, 0x8016564b, 0x677fc20c, 0x59dc7ecc,
    0xe1619f40, 0x10cbc3e3, 0x81e12f30, 0x0c10160e,
    0x922e675e, 0xa26e3f66, 0x4ee8cf53, 0x78a09c6c,
    0xb0560e73, 0x573f9a34, 0xe69eed3c, 0xd3d2358e,
    0xdfc22380, 0xf2aed72e, 0x13cf486e, 0x94266c59,
    0x1fdf5e60, 0xc1ea049b, 0x7547f319, 0xd5da3e89,
    0x08ebefff, 0xd42d47f2, 0x38abb7c7, 0x543b11b9,
    0x4a1336a2, 0x699c26f4, 0x7f5fee10, 0x03048b8d,
    0x56c8e34f, 0xe7699447, 0x1ad3deea, 0x113cba98,
    0x2278692d, 0x12383115, 0xc511fd6a, 0x208b9bdb,
    0x30405838, 0x7ea8976b, 0x2e687f23, 0x18202c1c,
    0x06080b07, 0x4507ab21, 0xf8b6ca27, 0x29970d5f,
    0x0bef6472, 0xf4a6dc29, 0x8ef5b2b3, 0x74b08a62,
    0x82e5a4bd, 0xb2a5fc85, 0x734ff81e, 0x90dd95a8,
    0xb1a17708, 0x37bf2a44, 0x4c1b3da5, 0xbeb5ea8b,
    0xe3926db6, 0x3baf3c4a, 0x07ff727c, 0x0f149d83,
    0x31b72143, 0x1734b19f, 0x0ee3e4f8, 0xfc4d33d6,
    0x84edafba, 0xd9ca2887, 0xd2254cf5, 0x890ac0cf,
    0x28607424, 0x430fa026, 0x6d67df05, 0x5b2f8c3a,
    0x0a181d09, 0xbc46187d, 0xef827bb8, 0xcefe9918,
    0xec86f035, 0xcdfa1295, 0xea8efb32, 0x4917bd2f,
    0xc8f6921f, 0x9ccd83a6, 0x8a0e4b42, 0x88fdb9b4,
    0x268390dc, 0x53c463c5, 0xf551a552, 0x77b401ef,
    0x52331abe, 0xb7a97c0f, 0xa876226f, 0xc319f66d,
    0x6b6fd402, 0xa762bfec, 0xdd31d176, 0xd121c778,
    0x4f1fb628, 0x3c504e36, 0x8f02cbc8, 0x16c3c8e4,
    0x99c1032c, 0xcc0d6bee, 0x647b4981, 0x5e230cb0,
    0xa399461d, 0xfa4538d1, 0x217ce2a0, 0x6c90a67e,
    0x2d6cf4ae, 0x5ad8f541, 0x2470622a, 0xca0560e9,
    0x04fbf9f1, 0x8312ddc6, 0xc61576e7, 0x9e3e7150,
    0xab72a9e2, 0xe87d09c4, 0x2c9b8dd5, 0x6e635488,
    0x93d91e25, 0xf05d25d8, 0x72b88165, 0x2b64ffa9,
    0x5cd0fe46, 0x1d2cac96, 0x3ea3bcc0, 0x1b24a791,
    0x3648533f, 0x8c064045, 0x354cd8b2, 0xb94a98f7,
    0x7c5b659d, 0xe46d1fca, 0x62734286, 0x7a536e9a,
    0x400b2bab, 0x47f459d7, 0xff49b85b, 0x44f0d25a,
    0x395ccebc, 0x5d27873d, 0x00000000, 0xde355afb,
    0x02f3f2f6, 0x1cdbd5ed, 0x5fd475cb, 0x3a584531,
    0x686b5f8f, 0x238f1056, 0x582b07b7, 0xb8bde18c,
    0xa695c697, 0xc2ee8f16, 0xdacea30a, 0x3344d3b5,
    0x19d75567, 0xc901eb64, 0x34bba1c9, 0xf6552edf,
    0xa09dcd90, 0x9ac588a1, 0x658c30fa, 0x2a9386d2,
    0xae7e2968, 0x6a98ad79, 0x14303a12, 0x1e28271b,
    0xa4663461, 0x6688bb77, 0x2f9f0658, 0x15c74369,
    0x01f7797b, 0x0de76f75, 0xb4adf782, 0x48e0c454,
    0x96d59eaf, 0xcbf21992, 0x50c0e848, 0xe98a70bf,
    0x8df1393e, 0x87e92437, 0xd83d51fc, 0xc01d7de0,
    0x8bf93239, 0x4be44fd9, 0xed71894e, 0xba4e137a,
    0x851ad6c1, 0x51379133, 0x6080b070, 0x9fc9082b,
    0x3f54c5bb, 0x9722e7d4, 0x4dec44de, 0xb65e0574,
    0xa16ab4eb, 0xa9815b14, 0x050c808a, 0xee7502c3,
    0xaf895013, 0x6f942df3, 0x6177c90b, 0x9d3afadd,
    0x98367a57, 0xeb798249, 0x2774e9a7, 0xbf4293f0,
    0x42f8d95d, 0x861e5d4c, 0xdb39da71, 0x912aecd3
  ];
  
  Khazad.arrU1 = [
    0xd3ba68d2, 0xfc54194d, 0x712f93bc, 0x9c74b9cd,
    0xf5530251, 0x68d3b86b, 0x6bd2bd6f, 0xd74d6429,
    0xf0500d5d, 0xe9ac268a, 0x8a8d830e, 0xdcbf79c6,
    0x9070addd, 0xf6520755, 0xb39ac852, 0xd44c612d,
    0x23ea658f, 0x62d5a673, 0xa497f166, 0x6ed1b263,
    0x5533ffcc, 0xf3510859, 0xed5b2a71, 0xf7a604a2,
    0x7fde815f, 0xd848753d, 0xe5a8329a, 0xb699c75e,
    0x70db904b, 0x5632fac8, 0xc4b751e6, 0x19fc2bd7,
    0x38e348ab, 0xbf9edc42, 0xae91ef7e, 0xb09bcd56,
    0x3be24daf, 0xd0bb6dd6, 0xc3415819, 0xb26ecba5,
    0xf2a50bae, 0x40cbc00b, 0xbd6bdab1, 0xa295fb6e,
    0xfea11fbe, 0x08f318eb, 0xceb14ffe, 0x06020a08,
    0x49ccdb17, 0x51c4f337, 0x271d6974, 0x3c144450,
    0x58c3e82b, 0xa563f291, 0x73da954f, 0xe75d3469,
    0xe15f3e61, 0x79dc8b57, 0x877d94e9, 0x4acdde13,
    0x817f9ee1, 0xee5a2f75, 0xb46cc1ad, 0xe45c316d,
    0x04f70cfb, 0x6a26be98, 0x1cff24db, 0x2aed7e93,
    0x25e86f87, 0xba9dd34e, 0xb16fcea1, 0x8f8e8c02,
    0x2b197d64, 0xfda01aba, 0x0df017e7, 0x8689971e,
    0x110f333c, 0x09071b1c, 0xecaf2986, 0x10fb30cb,
    0x18082820, 0x3f154154, 0x170d3934, 0x0c041410,
    0x03010504, 0xac64e98d, 0x7cdf845b, 0x9a76b3c5,
    0x8b7980f9, 0x7add8e53, 0x473dc9f4, 0x3a164e58,
    0x413fc3fc, 0x5937ebdc, 0xb76dc4a9, 0x4838d8e0,
    0xd6b967de, 0x9573a2d1, 0x26e96a83, 0x5f35e1d4,
    0xff551c49, 0x9371a8d9, 0x8d7b8af1, 0x898c860a,
    0x9672a7d5, 0x8588921a, 0x07f609ff, 0x7e2a82a8,
    0x423ec6f8, 0xe25e3b65, 0x6927bb9c, 0xca464305,
    0x140c3c30, 0xaf65ec89, 0xb868d5bd, 0xa361f899,
    0x05030f0c, 0x5ec1e223, 0xf9571641, 0x67d6a97f,
    0x76d99a43, 0xe858257d, 0x75d89f47, 0xaa66e385,
    0x64d7ac7b, 0x4e3ad2e8, 0x45c8cf07, 0x443cccf0,
    0x13fa35cf, 0xa796f462, 0xf4a701a6, 0xb598c25a,
    0x29ec7b97, 0xd5b862da, 0x54c7fc3b, 0xefae2c82,
    0xbb69d0b9, 0xdd4b7a31, 0xe0ab3d96, 0xe6a9379e,
    0xa967e681, 0x1e0a2228, 0xc9474601, 0x0bf21def,
    0xc2b55bee, 0x6622aa88, 0x32e556b3, 0x2fee719f,
    0xdfbe7cc2, 0x7d2b87ac, 0x9e81bf3e, 0x36125a48,
    0x9883b536, 0x2d1b776c, 0x120e3638, 0x6523af8c,
    0x02f506f3, 0xcf454c09, 0x6321a584, 0x4fced11f,
    0xdb497039, 0x742c9cb0, 0x16f93ac3, 0x37e659bf,
    0xc7b654e2, 0x782888a0, 0x39174b5c, 0x9b82b032,
    0x2e1a7268, 0x808b9d16, 0x1ffe21df, 0x838a9812,
    0x1b092d24, 0x46c9ca03, 0x9487a126, 0xd24e6b25,
    0x3ee142a3, 0x722e96b8, 0x31e453b7, 0x3de047a7,
    0x20eb608b, 0xad90ea7a, 0xf1a40eaa, 0x221e6678,
    0x9285ab2e, 0xa060fd9d, 0x00000000, 0x6f25b194,
    0x01f403f7, 0x0ef112e3, 0xa194fe6a, 0x1d0b272c,
    0x34e75cbb, 0x9f75bcc9, 0x2cef749b, 0x5c34e4d0,
    0x5331f5c4, 0x61d4a377, 0x6dd0b767, 0x9786a422,
    0x827e9be5, 0xeaad238e, 0x1afd2ed3, 0x7b298da4,
    0x5030f0c0, 0x4d3bd7ec, 0xbc9fd946, 0x15f83fc7,
    0x57c6f93f, 0x35135f4c, 0x0a061e18, 0x0f051114,
    0x52c5f633, 0x33115544, 0x9977b6c1, 0x847c91ed,
    0x8e7a8ff5, 0x887885fd, 0x5a36eed8, 0x241c6c70,
    0x4b39dde4, 0xeb592079, 0x28187860, 0xfa561345,
    0xc8b345f6, 0xcdb04afa, 0x6c24b490, 0x6020a080,
    0xcbb240f2, 0xab92e072, 0xf8a315b6, 0x5dc0e727,
    0xcc44490d, 0xa662f795, 0x30105040, 0xc1b45eea,
    0x9184ae2a, 0xc5435211, 0xa893e576, 0x5bc2ed2f,
    0xde4a7f35, 0xdabd73ce, 0x8c8f8906, 0x772d99b4,
    0xd9bc76ca, 0xb99cd64a, 0xbe6adfb5, 0xc0405d1d,
    0x4ccfd41b, 0xfba210b2, 0x9d80ba3a, 0xd14f6e21,
    0x211f637c, 0x43cac50f, 0xe3aa3892, 0xc6425715
  ];
  
  Khazad.arrV1 = [
    0xb9bb016a, 0x9ae5b166, 0x65e2cd14, 0x8725511b,
    0xa2f7a457, 0xd6d003be, 0xded604b5, 0x52b3fe85,
    0xbafdad4a, 0x09cf63e0, 0x1c098496, 0x91a51a4d,
    0xa73d4d37, 0xaaf1a35c, 0xa47be117, 0x5ab5f98e,
    0x0346ac20, 0xe6c41184, 0xcc55c268, 0xc6dc0da8,
    0x85aa99d0, 0xb2fbaa41, 0xe2c79c0f, 0x59f355ae,
    0xbefe20c1, 0x7aade5a2, 0x29d77fcc, 0xbc71e80a,
    0x96e03be6, 0x8dac9edb, 0xd1952215, 0xb332ceaa,
    0x4b709373, 0x8463fd3b, 0xfc41d052, 0xac7de61c,
    0x43769478, 0xb1bd0661, 0x329bdaf1, 0x577917e5,
    0x41f95cb3, 0x16804b56, 0x7f670cc2, 0xdc59cc7e,
    0x61e1409f, 0xcb10e3c3, 0xe181302f, 0x100c0e16,
    0x2e925e67, 0x6ea2663f, 0xe84e53cf, 0xa0786c9c,
    0x56b0730e, 0x3f57349a, 0x9ee63ced, 0xd2d38e35,
    0xc2df8023, 0xaef22ed7, 0xcf136e48, 0x2694596c,
    0xdf1f605e, 0xeac19b04, 0x477519f3, 0xdad5893e,
    0xeb08ffef, 0x2dd4f247, 0xab38c7b7, 0x3b54b911,
    0x134aa236, 0x9c69f426, 0x5f7f10ee, 0x04038d8b,
    0xc8564fe3, 0x69e74794, 0xd31aeade, 0x3c1198ba,
    0x78222d69, 0x38121531, 0x11c56afd, 0x8b20db9b,
    0x40303858, 0xa87e6b97, 0x682e237f, 0x20181c2c,
    0x0806070b, 0x074521ab, 0xb6f827ca, 0x97295f0d,
    0xef0b7264, 0xa6f429dc, 0xf58eb3b2, 0xb074628a,
    0xe582bda4, 0xa5b285fc, 0x4f731ef8, 0xdd90a895,
    0xa1b10877, 0xbf37442a, 0x1b4ca53d, 0xb5be8bea,
    0x92e3b66d, 0xaf3b4a3c, 0xff077c72, 0x140f839d,
    0xb7314321, 0x34179fb1, 0xe30ef8e4, 0x4dfcd633,
    0xed84baaf, 0xcad98728, 0x25d2f54c, 0x0a89cfc0,
    0x60282474, 0x0f4326a0, 0x676d05df, 0x2f5b3a8c,
    0x180a091d, 0x46bc7d18, 0x82efb87b, 0xfece1899,
    0x86ec35f0, 0xfacd9512, 0x8eea32fb, 0x17492fbd,
    0xf6c81f92, 0xcd9ca683, 0x0e8a424b, 0xfd88b4b9,
    0x8326dc90, 0xc453c563, 0x51f552a5, 0xb477ef01,
    0x3352be1a, 0xa9b70f7c, 0x76a86f22, 0x19c36df6,
    0x6f6b02d4, 0x62a7ecbf, 0x31dd76d1, 0x21d178c7,
    0x1f4f28b6, 0x503c364e, 0x028fc8cb, 0xc316e4c8,
    0xc1992c03, 0x0dccee6b, 0x7b648149, 0x235eb00c,
    0x99a31d46, 0x45fad138, 0x7c21a0e2, 0x906c7ea6,
    0x6c2daef4, 0xd85a41f5, 0x70242a62, 0x05cae960,
    0xfb04f1f9, 0x1283c6dd, 0x15c6e776, 0x3e9e5071,
    0x72abe2a9, 0x7de8c409, 0x9b2cd58d, 0x636e8854,
    0xd993251e, 0x5df0d825, 0xb8726581, 0x642ba9ff,
    0xd05c46fe, 0x2c1d96ac, 0xa33ec0bc, 0x241b91a7,
    0x48363f53, 0x068c4540, 0x4c35b2d8, 0x4ab9f798,
    0x5b7c9d65, 0x6de4ca1f, 0x73628642, 0x537a9a6e,
    0x0b40ab2b, 0xf447d759, 0x49ff5bb8, 0xf0445ad2,
    0x5c39bcce, 0x275d3d87, 0x00000000, 0x35defb5a,
    0xf302f6f2, 0xdb1cedd5, 0xd45fcb75, 0x583a3145,
    0x6b688f5f, 0x8f235610, 0x2b58b707, 0xbdb88ce1,
    0x95a697c6, 0xeec2168f, 0xceda0aa3, 0x4433b5d3,
    0xd7196755, 0x01c964eb, 0xbb34c9a1, 0x55f6df2e,
    0x9da090cd, 0xc59aa188, 0x8c65fa30, 0x932ad286,
    0x7eae6829, 0x986a79ad, 0x3014123a, 0x281e1b27,
    0x66a46134, 0x886677bb, 0x9f2f5806, 0xc7156943,
    0xf7017b79, 0xe70d756f, 0xadb482f7, 0xe04854c4,
    0xd596af9e, 0xf2cb9219, 0xc05048e8, 0x8ae9bf70,
    0xf18d3e39, 0xe9873724, 0x3dd8fc51, 0x1dc0e07d,
    0xf98b3932, 0xe44bd94f, 0x71ed4e89, 0x4eba7a13,
    0x1a85c1d6, 0x37513391, 0x806070b0, 0xc99f2b08,
    0x543fbbc5, 0x2297d4e7, 0xec4dde44, 0x5eb67405,
    0x6aa1ebb4, 0x81a9145b, 0x0c058a80, 0x75eec302,
    0x89af1350, 0x946ff32d, 0x77610bc9, 0x3a9dddfa,
    0x3698577a, 0x79eb4982, 0x7427a7e9, 0x42bff093,
    0xf8425dd9, 0x1e864c5d, 0x39db71da, 0x2a91d3ec
  ];
  
  Khazad.arrU2 = [
    0xd268bad3, 0x4d1954fc, 0xbc932f71, 0xcdb9749c,
    0x510253f5, 0x6bb8d368, 0x6fbdd26b, 0x29644dd7,
    0x5d0d50f0, 0x8a26ace9, 0x0e838d8a, 0xc679bfdc,
    0xddad7090, 0x550752f6, 0x52c89ab3, 0x2d614cd4,
    0x8f65ea23, 0x73a6d562, 0x66f197a4, 0x63b2d16e,
    0xccff3355, 0x590851f3, 0x712a5bed, 0xa204a6f7,
    0x5f81de7f, 0x3d7548d8, 0x9a32a8e5, 0x5ec799b6,
    0x4b90db70, 0xc8fa3256, 0xe651b7c4, 0xd72bfc19,
    0xab48e338, 0x42dc9ebf, 0x7eef91ae, 0x56cd9bb0,
    0xaf4de23b, 0xd66dbbd0, 0x195841c3, 0xa5cb6eb2,
    0xae0ba5f2, 0x0bc0cb40, 0xb1da6bbd, 0x6efb95a2,
    0xbe1fa1fe, 0xeb18f308, 0xfe4fb1ce, 0x080a0206,
    0x17dbcc49, 0x37f3c451, 0x74691d27, 0x5044143c,
    0x2be8c358, 0x91f263a5, 0x4f95da73, 0x69345de7,
    0x613e5fe1, 0x578bdc79, 0xe9947d87, 0x13decd4a,
    0xe19e7f81, 0x752f5aee, 0xadc16cb4, 0x6d315ce4,
    0xfb0cf704, 0x98be266a, 0xdb24ff1c, 0x937eed2a,
    0x876fe825, 0x4ed39dba, 0xa1ce6fb1, 0x028c8e8f,
    0x647d192b, 0xba1aa0fd, 0xe717f00d, 0x1e978986,
    0x3c330f11, 0x1c1b0709, 0x8629afec, 0xcb30fb10,
    0x20280818, 0x5441153f, 0x34390d17, 0x1014040c,
    0x04050103, 0x8de964ac, 0x5b84df7c, 0xc5b3769a,
    0xf980798b, 0x538edd7a, 0xf4c93d47, 0x584e163a,
    0xfcc33f41, 0xdceb3759, 0xa9c46db7, 0xe0d83848,
    0xde67b9d6, 0xd1a27395, 0x836ae926, 0xd4e1355f,
    0x491c55ff, 0xd9a87193, 0xf18a7b8d, 0x0a868c89,
    0xd5a77296, 0x1a928885, 0xff09f607, 0xa8822a7e,
    0xf8c63e42, 0x653b5ee2, 0x9cbb2769, 0x054346ca,
    0x303c0c14, 0x89ec65af, 0xbdd568b8, 0x99f861a3,
    0x0c0f0305, 0x23e2c15e, 0x411657f9, 0x7fa9d667,
    0x439ad976, 0x7d2558e8, 0x479fd875, 0x85e366aa,
    0x7bacd764, 0xe8d23a4e, 0x07cfc845, 0xf0cc3c44,
    0xcf35fa13, 0x62f496a7, 0xa601a7f4, 0x5ac298b5,
    0x977bec29, 0xda62b8d5, 0x3bfcc754, 0x822caeef,
    0xb9d069bb, 0x317a4bdd, 0x963dabe0, 0x9e37a9e6,
    0x81e667a9, 0x28220a1e, 0x014647c9, 0xef1df20b,
    0xee5bb5c2, 0x88aa2266, 0xb356e532, 0x9f71ee2f,
    0xc27cbedf, 0xac872b7d, 0x3ebf819e, 0x485a1236,
    0x36b58398, 0x6c771b2d, 0x38360e12, 0x8caf2365,
    0xf306f502, 0x094c45cf, 0x84a52163, 0x1fd1ce4f,
    0x397049db, 0xb09c2c74, 0xc33af916, 0xbf59e637,
    0xe254b6c7, 0xa0882878, 0x5c4b1739, 0x32b0829b,
    0x68721a2e, 0x169d8b80, 0xdf21fe1f, 0x12988a83,
    0x242d091b, 0x03cac946, 0x26a18794, 0x256b4ed2,
    0xa342e13e, 0xb8962e72, 0xb753e431, 0xa747e03d,
    0x8b60eb20, 0x7aea90ad, 0xaa0ea4f1, 0x78661e22,
    0x2eab8592, 0x9dfd60a0, 0x00000000, 0x94b1256f,
    0xf703f401, 0xe312f10e, 0x6afe94a1, 0x2c270b1d,
    0xbb5ce734, 0xc9bc759f, 0x9b74ef2c, 0xd0e4345c,
    0xc4f53153, 0x77a3d461, 0x67b7d06d, 0x22a48697,
    0xe59b7e82, 0x8e23adea, 0xd32efd1a, 0xa48d297b,
    0xc0f03050, 0xecd73b4d, 0x46d99fbc, 0xc73ff815,
    0x3ff9c657, 0x4c5f1335, 0x181e060a, 0x1411050f,
    0x33f6c552, 0x44551133, 0xc1b67799, 0xed917c84,
    0xf58f7a8e, 0xfd857888, 0xd8ee365a, 0x706c1c24,
    0xe4dd394b, 0x792059eb, 0x60781828, 0x451356fa,
    0xf645b3c8, 0xfa4ab0cd, 0x90b4246c, 0x80a02060,
    0xf240b2cb, 0x72e092ab, 0xb615a3f8, 0x27e7c05d,
    0x0d4944cc, 0x95f762a6, 0x40501030, 0xea5eb4c1,
    0x2aae8491, 0x115243c5, 0x76e593a8, 0x2fedc25b,
    0x357f4ade, 0xce73bdda, 0x06898f8c, 0xb4992d77,
    0xca76bcd9, 0x4ad69cb9, 0xb5df6abe, 0x1d5d40c0,
    0x1bd4cf4c, 0xb210a2fb, 0x3aba809d, 0x216e4fd1,
    0x7c631f21, 0x0fc5ca43, 0x9238aae3, 0x155742c6
  ];
  
  Khazad.arrV2 = [
    0x6a01bbb9, 0x66b1e59a, 0x14cde265, 0x1b512587,
    0x57a4f7a2, 0xbe03d0d6, 0xb504d6de, 0x85feb352,
    0x4aadfdba, 0xe063cf09, 0x9684091c, 0x4d1aa591,
    0x374d3da7, 0x5ca3f1aa, 0x17e17ba4, 0x8ef9b55a,
    0x20ac4603, 0x8411c4e6, 0x68c255cc, 0xa80ddcc6,
    0xd099aa85, 0x41aafbb2, 0x0f9cc7e2, 0xae55f359,
    0xc120febe, 0xa2e5ad7a, 0xcc7fd729, 0x0ae871bc,
    0xe63be096, 0xdb9eac8d, 0x152295d1, 0xaace32b3,
    0x7393704b, 0x3bfd6384, 0x52d041fc, 0x1ce67dac,
    0x78947643, 0x6106bdb1, 0xf1da9b32, 0xe5177957,
    0xb35cf941, 0x564b8016, 0xc20c677f, 0x7ecc59dc,
    0x9f40e161, 0xc3e310cb, 0x2f3081e1, 0x160e0c10,
    0x675e922e, 0x3f66a26e, 0xcf534ee8, 0x9c6c78a0,
    0x0e73b056, 0x9a34573f, 0xed3ce69e, 0x358ed3d2,
    0x2380dfc2, 0xd72ef2ae, 0x486e13cf, 0x6c599426,
    0x5e601fdf, 0x049bc1ea, 0xf3197547, 0x3e89d5da,
    0xefff08eb, 0x47f2d42d, 0xb7c738ab, 0x11b9543b,
    0x36a24a13, 0x26f4699c, 0xee107f5f, 0x8b8d0304,
    0xe34f56c8, 0x9447e769, 0xdeea1ad3, 0xba98113c,
    0x692d2278, 0x31151238, 0xfd6ac511, 0x9bdb208b,
    0x58383040, 0x976b7ea8, 0x7f232e68, 0x2c1c1820,
    0x0b070608, 0xab214507, 0xca27f8b6, 0x0d5f2997,
    0x64720bef, 0xdc29f4a6, 0xb2b38ef5, 0x8a6274b0,
    0xa4bd82e5, 0xfc85b2a5, 0xf81e734f, 0x95a890dd,
    0x7708b1a1, 0x2a4437bf, 0x3da54c1b, 0xea8bbeb5,
    0x6db6e392, 0x3c4a3baf, 0x727c07ff, 0x9d830f14,
    0x214331b7, 0xb19f1734, 0xe4f80ee3, 0x33d6fc4d,
    0xafba84ed, 0x2887d9ca, 0x4cf5d225, 0xc0cf890a,
    0x74242860, 0xa026430f, 0xdf056d67, 0x8c3a5b2f,
    0x1d090a18, 0x187dbc46, 0x7bb8ef82, 0x9918cefe,
    0xf035ec86, 0x1295cdfa, 0xfb32ea8e, 0xbd2f4917,
    0x921fc8f6, 0x83a69ccd, 0x4b428a0e, 0xb9b488fd,
    0x90dc2683, 0x63c553c4, 0xa552f551, 0x01ef77b4,
    0x1abe5233, 0x7c0fb7a9, 0x226fa876, 0xf66dc319,
    0xd4026b6f, 0xbfeca762, 0xd176dd31, 0xc778d121,
    0xb6284f1f, 0x4e363c50, 0xcbc88f02, 0xc8e416c3,
    0x032c99c1, 0x6beecc0d, 0x4981647b, 0x0cb05e23,
    0x461da399, 0x38d1fa45, 0xe2a0217c, 0xa67e6c90,
    0xf4ae2d6c, 0xf5415ad8, 0x622a2470, 0x60e9ca05,
    0xf9f104fb, 0xddc68312, 0x76e7c615, 0x71509e3e,
    0xa9e2ab72, 0x09c4e87d, 0x8dd52c9b, 0x54886e63,
    0x1e2593d9, 0x25d8f05d, 0x816572b8, 0xffa92b64,
    0xfe465cd0, 0xac961d2c, 0xbcc03ea3, 0xa7911b24,
    0x533f3648, 0x40458c06, 0xd8b2354c, 0x98f7b94a,
    0x659d7c5b, 0x1fcae46d, 0x42866273, 0x6e9a7a53,
    0x2bab400b, 0x59d747f4, 0xb85bff49, 0xd25a44f0,
    0xcebc395c, 0x873d5d27, 0x00000000, 0x5afbde35,
    0xf2f602f3, 0xd5ed1cdb, 0x75cb5fd4, 0x45313a58,
    0x5f8f686b, 0x1056238f, 0x07b7582b, 0xe18cb8bd,
    0xc697a695, 0x8f16c2ee, 0xa30adace, 0xd3b53344,
    0x556719d7, 0xeb64c901, 0xa1c934bb, 0x2edff655,
    0xcd90a09d, 0x88a19ac5, 0x30fa658c, 0x86d22a93,
    0x2968ae7e, 0xad796a98, 0x3a121430, 0x271b1e28,
    0x3461a466, 0xbb776688, 0x06582f9f, 0x436915c7,
    0x797b01f7, 0x6f750de7, 0xf782b4ad, 0xc45448e0,
    0x9eaf96d5, 0x1992cbf2, 0xe84850c0, 0x70bfe98a,
    0x393e8df1, 0x243787e9, 0x51fcd83d, 0x7de0c01d,
    0x32398bf9, 0x4fd94be4, 0x894eed71, 0x137aba4e,
    0xd6c1851a, 0x91335137, 0xb0706080, 0x082b9fc9,
    0xc5bb3f54, 0xe7d49722, 0x44de4dec, 0x0574b65e,
    0xb4eba16a, 0x5b14a981, 0x808a050c, 0x02c3ee75,
    0x5013af89, 0x2df36f94, 0xc90b6177, 0xfadd9d3a,
    0x7a579836, 0x8249eb79, 0xe9a72774, 0x93f0bf42,
    0xd95d42f8, 0x5d4c861e, 0xda71db39, 0xecd3912a
  ];
  
  Khazad.arrU3 = [
    0x68d2d3ba, 0x194dfc54, 0x93bc712f, 0xb9cd9c74,
    0x0251f553, 0xb86b68d3, 0xbd6f6bd2, 0x6429d74d,
    0x0d5df050, 0x268ae9ac, 0x830e8a8d, 0x79c6dcbf,
    0xaddd9070, 0x0755f652, 0xc852b39a, 0x612dd44c,
    0x658f23ea, 0xa67362d5, 0xf166a497, 0xb2636ed1,
    0xffcc5533, 0x0859f351, 0x2a71ed5b, 0x04a2f7a6,
    0x815f7fde, 0x753dd848, 0x329ae5a8, 0xc75eb699,
    0x904b70db, 0xfac85632, 0x51e6c4b7, 0x2bd719fc,
    0x48ab38e3, 0xdc42bf9e, 0xef7eae91, 0xcd56b09b,
    0x4daf3be2, 0x6dd6d0bb, 0x5819c341, 0xcba5b26e,
    0x0baef2a5, 0xc00b40cb, 0xdab1bd6b, 0xfb6ea295,
    0x1fbefea1, 0x18eb08f3, 0x4ffeceb1, 0x0a080602,
    0xdb1749cc, 0xf33751c4, 0x6974271d, 0x44503c14,
    0xe82b58c3, 0xf291a563, 0x954f73da, 0x3469e75d,
    0x3e61e15f, 0x8b5779dc, 0x94e9877d, 0xde134acd,
    0x9ee1817f, 0x2f75ee5a, 0xc1adb46c, 0x316de45c,
    0x0cfb04f7, 0xbe986a26, 0x24db1cff, 0x7e932aed,
    0x6f8725e8, 0xd34eba9d, 0xcea1b16f, 0x8c028f8e,
    0x7d642b19, 0x1abafda0, 0x17e70df0, 0x971e8689,
    0x333c110f, 0x1b1c0907, 0x2986ecaf, 0x30cb10fb,
    0x28201808, 0x41543f15, 0x3934170d, 0x14100c04,
    0x05040301, 0xe98dac64, 0x845b7cdf, 0xb3c59a76,
    0x80f98b79, 0x8e537add, 0xc9f4473d, 0x4e583a16,
    0xc3fc413f, 0xebdc5937, 0xc4a9b76d, 0xd8e04838,
    0x67ded6b9, 0xa2d19573, 0x6a8326e9, 0xe1d45f35,
    0x1c49ff55, 0xa8d99371, 0x8af18d7b, 0x860a898c,
    0xa7d59672, 0x921a8588, 0x09ff07f6, 0x82a87e2a,
    0xc6f8423e, 0x3b65e25e, 0xbb9c6927, 0x4305ca46,
    0x3c30140c, 0xec89af65, 0xd5bdb868, 0xf899a361,
    0x0f0c0503, 0xe2235ec1, 0x1641f957, 0xa97f67d6,
    0x9a4376d9, 0x257de858, 0x9f4775d8, 0xe385aa66,
    0xac7b64d7, 0xd2e84e3a, 0xcf0745c8, 0xccf0443c,
    0x35cf13fa, 0xf462a796, 0x01a6f4a7, 0xc25ab598,
    0x7b9729ec, 0x62dad5b8, 0xfc3b54c7, 0x2c82efae,
    0xd0b9bb69, 0x7a31dd4b, 0x3d96e0ab, 0x379ee6a9,
    0xe681a967, 0x22281e0a, 0x4601c947, 0x1def0bf2,
    0x5beec2b5, 0xaa886622, 0x56b332e5, 0x719f2fee,
    0x7cc2dfbe, 0x87ac7d2b, 0xbf3e9e81, 0x5a483612,
    0xb5369883, 0x776c2d1b, 0x3638120e, 0xaf8c6523,
    0x06f302f5, 0x4c09cf45, 0xa5846321, 0xd11f4fce,
    0x7039db49, 0x9cb0742c, 0x3ac316f9, 0x59bf37e6,
    0x54e2c7b6, 0x88a07828, 0x4b5c3917, 0xb0329b82,
    0x72682e1a, 0x9d16808b, 0x21df1ffe, 0x9812838a,
    0x2d241b09, 0xca0346c9, 0xa1269487, 0x6b25d24e,
    0x42a33ee1, 0x96b8722e, 0x53b731e4, 0x47a73de0,
    0x608b20eb, 0xea7aad90, 0x0eaaf1a4, 0x6678221e,
    0xab2e9285, 0xfd9da060, 0x00000000, 0xb1946f25,
    0x03f701f4, 0x12e30ef1, 0xfe6aa194, 0x272c1d0b,
    0x5cbb34e7, 0xbcc99f75, 0x749b2cef, 0xe4d05c34,
    0xf5c45331, 0xa37761d4, 0xb7676dd0, 0xa4229786,
    0x9be5827e, 0x238eeaad, 0x2ed31afd, 0x8da47b29,
    0xf0c05030, 0xd7ec4d3b, 0xd946bc9f, 0x3fc715f8,
    0xf93f57c6, 0x5f4c3513, 0x1e180a06, 0x11140f05,
    0xf63352c5, 0x55443311, 0xb6c19977, 0x91ed847c,
    0x8ff58e7a, 0x85fd8878, 0xeed85a36, 0x6c70241c,
    0xdde44b39, 0x2079eb59, 0x78602818, 0x1345fa56,
    0x45f6c8b3, 0x4afacdb0, 0xb4906c24, 0xa0806020,
    0x40f2cbb2, 0xe072ab92, 0x15b6f8a3, 0xe7275dc0,
    0x490dcc44, 0xf795a662, 0x50403010, 0x5eeac1b4,
    0xae2a9184, 0x5211c543, 0xe576a893, 0xed2f5bc2,
    0x7f35de4a, 0x73cedabd, 0x89068c8f, 0x99b4772d,
    0x76cad9bc, 0xd64ab99c, 0xdfb5be6a, 0x5d1dc040,
    0xd41b4ccf, 0x10b2fba2, 0xba3a9d80, 0x6e21d14f,
    0x637c211f, 0xc50f43ca, 0x3892e3aa, 0x5715c642
  ];
  
  Khazad.arrV3 = [
    0x016ab9bb, 0xb1669ae5, 0xcd1465e2, 0x511b8725,
    0xa457a2f7, 0x03bed6d0, 0x04b5ded6, 0xfe8552b3,
    0xad4abafd, 0x63e009cf, 0x84961c09, 0x1a4d91a5,
    0x4d37a73d, 0xa35caaf1, 0xe117a47b, 0xf98e5ab5,
    0xac200346, 0x1184e6c4, 0xc268cc55, 0x0da8c6dc,
    0x99d085aa, 0xaa41b2fb, 0x9c0fe2c7, 0x55ae59f3,
    0x20c1befe, 0xe5a27aad, 0x7fcc29d7, 0xe80abc71,
    0x3be696e0, 0x9edb8dac, 0x2215d195, 0xceaab332,
    0x93734b70, 0xfd3b8463, 0xd052fc41, 0xe61cac7d,
    0x94784376, 0x0661b1bd, 0xdaf1329b, 0x17e55779,
    0x5cb341f9, 0x4b561680, 0x0cc27f67, 0xcc7edc59,
    0x409f61e1, 0xe3c3cb10, 0x302fe181, 0x0e16100c,
    0x5e672e92, 0x663f6ea2, 0x53cfe84e, 0x6c9ca078,
    0x730e56b0, 0x349a3f57, 0x3ced9ee6, 0x8e35d2d3,
    0x8023c2df, 0x2ed7aef2, 0x6e48cf13, 0x596c2694,
    0x605edf1f, 0x9b04eac1, 0x19f34775, 0x893edad5,
    0xffefeb08, 0xf2472dd4, 0xc7b7ab38, 0xb9113b54,
    0xa236134a, 0xf4269c69, 0x10ee5f7f, 0x8d8b0403,
    0x4fe3c856, 0x479469e7, 0xeaded31a, 0x98ba3c11,
    0x2d697822, 0x15313812, 0x6afd11c5, 0xdb9b8b20,
    0x38584030, 0x6b97a87e, 0x237f682e, 0x1c2c2018,
    0x070b0806, 0x21ab0745, 0x27cab6f8, 0x5f0d9729,
    0x7264ef0b, 0x29dca6f4, 0xb3b2f58e, 0x628ab074,
    0xbda4e582, 0x85fca5b2, 0x1ef84f73, 0xa895dd90,
    0x0877a1b1, 0x442abf37, 0xa53d1b4c, 0x8beab5be,
    0xb66d92e3, 0x4a3caf3b, 0x7c72ff07, 0x839d140f,
    0x4321b731, 0x9fb13417, 0xf8e4e30e, 0xd6334dfc,
    0xbaafed84, 0x8728cad9, 0xf54c25d2, 0xcfc00a89,
    0x24746028, 0x26a00f43, 0x05df676d, 0x3a8c2f5b,
    0x091d180a, 0x7d1846bc, 0xb87b82ef, 0x1899fece,
    0x35f086ec, 0x9512facd, 0x32fb8eea, 0x2fbd1749,
    0x1f92f6c8, 0xa683cd9c, 0x424b0e8a, 0xb4b9fd88,
    0xdc908326, 0xc563c453, 0x52a551f5, 0xef01b477,
    0xbe1a3352, 0x0f7ca9b7, 0x6f2276a8, 0x6df619c3,
    0x02d46f6b, 0xecbf62a7, 0x76d131dd, 0x78c721d1,
    0x28b61f4f, 0x364e503c, 0xc8cb028f, 0xe4c8c316,
    0x2c03c199, 0xee6b0dcc, 0x81497b64, 0xb00c235e,
    0x1d4699a3, 0xd13845fa, 0xa0e27c21, 0x7ea6906c,
    0xaef46c2d, 0x41f5d85a, 0x2a627024, 0xe96005ca,
    0xf1f9fb04, 0xc6dd1283, 0xe77615c6, 0x50713e9e,
    0xe2a972ab, 0xc4097de8, 0xd58d9b2c, 0x8854636e,
    0x251ed993, 0xd8255df0, 0x6581b872, 0xa9ff642b,
    0x46fed05c, 0x96ac2c1d, 0xc0bca33e, 0x91a7241b,
    0x3f534836, 0x4540068c, 0xb2d84c35, 0xf7984ab9,
    0x9d655b7c, 0xca1f6de4, 0x86427362, 0x9a6e537a,
    0xab2b0b40, 0xd759f447, 0x5bb849ff, 0x5ad2f044,
    0xbcce5c39, 0x3d87275d, 0x00000000, 0xfb5a35de,
    0xf6f2f302, 0xedd5db1c, 0xcb75d45f, 0x3145583a,
    0x8f5f6b68, 0x56108f23, 0xb7072b58, 0x8ce1bdb8,
    0x97c695a6, 0x168feec2, 0x0aa3ceda, 0xb5d34433,
    0x6755d719, 0x64eb01c9, 0xc9a1bb34, 0xdf2e55f6,
    0x90cd9da0, 0xa188c59a, 0xfa308c65, 0xd286932a,
    0x68297eae, 0x79ad986a, 0x123a3014, 0x1b27281e,
    0x613466a4, 0x77bb8866, 0x58069f2f, 0x6943c715,
    0x7b79f701, 0x756fe70d, 0x82f7adb4, 0x54c4e048,
    0xaf9ed596, 0x9219f2cb, 0x48e8c050, 0xbf708ae9,
    0x3e39f18d, 0x3724e987, 0xfc513dd8, 0xe07d1dc0,
    0x3932f98b, 0xd94fe44b, 0x4e8971ed, 0x7a134eba,
    0xc1d61a85, 0x33913751, 0x70b08060, 0x2b08c99f,
    0xbbc5543f, 0xd4e72297, 0xde44ec4d, 0x74055eb6,
    0xebb46aa1, 0x145b81a9, 0x8a800c05, 0xc30275ee,
    0x135089af, 0xf32d946f, 0x0bc97761, 0xddfa3a9d,
    0x577a3698, 0x498279eb, 0xa7e97427, 0xf09342bf,
    0x5dd9f842, 0x4c5d1e86, 0x71da39db, 0xd3ec2a91
  ];
  
  Khazad.arrU4 = [
    0xbbb96a01, 0xe59a66b1, 0xe26514cd, 0x25871b51,
    0xf7a257a4, 0xd0d6be03, 0xd6deb504, 0xb35285fe,
    0xfdba4aad, 0xcf09e063, 0x091c9684, 0xa5914d1a,
    0x3da7374d, 0xf1aa5ca3, 0x7ba417e1, 0xb55a8ef9,
    0x460320ac, 0xc4e68411, 0x55cc68c2, 0xdcc6a80d,
    0xaa85d099, 0xfbb241aa, 0xc7e20f9c, 0xf359ae55,
    0xfebec120, 0xad7aa2e5, 0xd729cc7f, 0x71bc0ae8,
    0xe096e63b, 0xac8ddb9e, 0x95d11522, 0x32b3aace,
    0x704b7393, 0x63843bfd, 0x41fc52d0, 0x7dac1ce6,
    0x76437894, 0xbdb16106, 0x9b32f1da, 0x7957e517,
    0xf941b35c, 0x8016564b, 0x677fc20c, 0x59dc7ecc,
    0xe1619f40, 0x10cbc3e3, 0x81e12f30, 0x0c10160e,
    0x922e675e, 0xa26e3f66, 0x4ee8cf53, 0x78a09c6c,
    0xb0560e73, 0x573f9a34, 0xe69eed3c, 0xd3d2358e,
    0xdfc22380, 0xf2aed72e, 0x13cf486e, 0x94266c59,
    0x1fdf5e60, 0xc1ea049b, 0x7547f319, 0xd5da3e89,
    0x08ebefff, 0xd42d47f2, 0x38abb7c7, 0x543b11b9,
    0x4a1336a2, 0x699c26f4, 0x7f5fee10, 0x03048b8d,
    0x56c8e34f, 0xe7699447, 0x1ad3deea, 0x113cba98,
    0x2278692d, 0x12383115, 0xc511fd6a, 0x208b9bdb,
    0x30405838, 0x7ea8976b, 0x2e687f23, 0x18202c1c,
    0x06080b07, 0x4507ab21, 0xf8b6ca27, 0x29970d5f,
    0x0bef6472, 0xf4a6dc29, 0x8ef5b2b3, 0x74b08a62,
    0x82e5a4bd, 0xb2a5fc85, 0x734ff81e, 0x90dd95a8,
    0xb1a17708, 0x37bf2a44, 0x4c1b3da5, 0xbeb5ea8b,
    0xe3926db6, 0x3baf3c4a, 0x07ff727c, 0x0f149d83,
    0x31b72143, 0x1734b19f, 0x0ee3e4f8, 0xfc4d33d6,
    0x84edafba, 0xd9ca2887, 0xd2254cf5, 0x890ac0cf,
    0x28607424, 0x430fa026, 0x6d67df05, 0x5b2f8c3a,
    0x0a181d09, 0xbc46187d, 0xef827bb8, 0xcefe9918,
    0xec86f035, 0xcdfa1295, 0xea8efb32, 0x4917bd2f,
    0xc8f6921f, 0x9ccd83a6, 0x8a0e4b42, 0x88fdb9b4,
    0x268390dc, 0x53c463c5, 0xf551a552, 0x77b401ef,
    0x52331abe, 0xb7a97c0f, 0xa876226f, 0xc319f66d,
    0x6b6fd402, 0xa762bfec, 0xdd31d176, 0xd121c778,
    0x4f1fb628, 0x3c504e36, 0x8f02cbc8, 0x16c3c8e4,
    0x99c1032c, 0xcc0d6bee, 0x647b4981, 0x5e230cb0,
    0xa399461d, 0xfa4538d1, 0x217ce2a0, 0x6c90a67e,
    0x2d6cf4ae, 0x5ad8f541, 0x2470622a, 0xca0560e9,
    0x04fbf9f1, 0x8312ddc6, 0xc61576e7, 0x9e3e7150,
    0xab72a9e2, 0xe87d09c4, 0x2c9b8dd5, 0x6e635488,
    0x93d91e25, 0xf05d25d8, 0x72b88165, 0x2b64ffa9,
    0x5cd0fe46, 0x1d2cac96, 0x3ea3bcc0, 0x1b24a791,
    0x3648533f, 0x8c064045, 0x354cd8b2, 0xb94a98f7,
    0x7c5b659d, 0xe46d1fca, 0x62734286, 0x7a536e9a,
    0x400b2bab, 0x47f459d7, 0xff49b85b, 0x44f0d25a,
    0x395ccebc, 0x5d27873d, 0x00000000, 0xde355afb,
    0x02f3f2f6, 0x1cdbd5ed, 0x5fd475cb, 0x3a584531,
    0x686b5f8f, 0x238f1056, 0x582b07b7, 0xb8bde18c,
    0xa695c697, 0xc2ee8f16, 0xdacea30a, 0x3344d3b5,
    0x19d75567, 0xc901eb64, 0x34bba1c9, 0xf6552edf,
    0xa09dcd90, 0x9ac588a1, 0x658c30fa, 0x2a9386d2,
    0xae7e2968, 0x6a98ad79, 0x14303a12, 0x1e28271b,
    0xa4663461, 0x6688bb77, 0x2f9f0658, 0x15c74369,
    0x01f7797b, 0x0de76f75, 0xb4adf782, 0x48e0c454,
    0x96d59eaf, 0xcbf21992, 0x50c0e848, 0xe98a70bf,
    0x8df1393e, 0x87e92437, 0xd83d51fc, 0xc01d7de0,
    0x8bf93239, 0x4be44fd9, 0xed71894e, 0xba4e137a,
    0x851ad6c1, 0x51379133, 0x6080b070, 0x9fc9082b,
    0x3f54c5bb, 0x9722e7d4, 0x4dec44de, 0xb65e0574,
    0xa16ab4eb, 0xa9815b14, 0x050c808a, 0xee7502c3,
    0xaf895013, 0x6f942df3, 0x6177c90b, 0x9d3afadd,
    0x98367a57, 0xeb798249, 0x2774e9a7, 0xbf4293f0,
    0x42f8d95d, 0x861e5d4c, 0xdb39da71, 0x912aecd3
  ];
  
  Khazad.arrV4 = [
    0xbad3d268, 0x54fc4d19, 0x2f71bc93, 0x749ccdb9,
    0x53f55102, 0xd3686bb8, 0xd26b6fbd, 0x4dd72964,
    0x50f05d0d, 0xace98a26, 0x8d8a0e83, 0xbfdcc679,
    0x7090ddad, 0x52f65507, 0x9ab352c8, 0x4cd42d61,
    0xea238f65, 0xd56273a6, 0x97a466f1, 0xd16e63b2,
    0x3355ccff, 0x51f35908, 0x5bed712a, 0xa6f7a204,
    0xde7f5f81, 0x48d83d75, 0xa8e59a32, 0x99b65ec7,
    0xdb704b90, 0x3256c8fa, 0xb7c4e651, 0xfc19d72b,
    0xe338ab48, 0x9ebf42dc, 0x91ae7eef, 0x9bb056cd,
    0xe23baf4d, 0xbbd0d66d, 0x41c31958, 0x6eb2a5cb,
    0xa5f2ae0b, 0xcb400bc0, 0x6bbdb1da, 0x95a26efb,
    0xa1febe1f, 0xf308eb18, 0xb1cefe4f, 0x0206080a,
    0xcc4917db, 0xc45137f3, 0x1d277469, 0x143c5044,
    0xc3582be8, 0x63a591f2, 0xda734f95, 0x5de76934,
    0x5fe1613e, 0xdc79578b, 0x7d87e994, 0xcd4a13de,
    0x7f81e19e, 0x5aee752f, 0x6cb4adc1, 0x5ce46d31,
    0xf704fb0c, 0x266a98be, 0xff1cdb24, 0xed2a937e,
    0xe825876f, 0x9dba4ed3, 0x6fb1a1ce, 0x8e8f028c,
    0x192b647d, 0xa0fdba1a, 0xf00de717, 0x89861e97,
    0x0f113c33, 0x07091c1b, 0xafec8629, 0xfb10cb30,
    0x08182028, 0x153f5441, 0x0d173439, 0x040c1014,
    0x01030405, 0x64ac8de9, 0xdf7c5b84, 0x769ac5b3,
    0x798bf980, 0xdd7a538e, 0x3d47f4c9, 0x163a584e,
    0x3f41fcc3, 0x3759dceb, 0x6db7a9c4, 0x3848e0d8,
    0xb9d6de67, 0x7395d1a2, 0xe926836a, 0x355fd4e1,
    0x55ff491c, 0x7193d9a8, 0x7b8df18a, 0x8c890a86,
    0x7296d5a7, 0x88851a92, 0xf607ff09, 0x2a7ea882,
    0x3e42f8c6, 0x5ee2653b, 0x27699cbb, 0x46ca0543,
    0x0c14303c, 0x65af89ec, 0x68b8bdd5, 0x61a399f8,
    0x03050c0f, 0xc15e23e2, 0x57f94116, 0xd6677fa9,
    0xd976439a, 0x58e87d25, 0xd875479f, 0x66aa85e3,
    0xd7647bac, 0x3a4ee8d2, 0xc84507cf, 0x3c44f0cc,
    0xfa13cf35, 0x96a762f4, 0xa7f4a601, 0x98b55ac2,
    0xec29977b, 0xb8d5da62, 0xc7543bfc, 0xaeef822c,
    0x69bbb9d0, 0x4bdd317a, 0xabe0963d, 0xa9e69e37,
    0x67a981e6, 0x0a1e2822, 0x47c90146, 0xf20bef1d,
    0xb5c2ee5b, 0x226688aa, 0xe532b356, 0xee2f9f71,
    0xbedfc27c, 0x2b7dac87, 0x819e3ebf, 0x1236485a,
    0x839836b5, 0x1b2d6c77, 0x0e123836, 0x23658caf,
    0xf502f306, 0x45cf094c, 0x216384a5, 0xce4f1fd1,
    0x49db3970, 0x2c74b09c, 0xf916c33a, 0xe637bf59,
    0xb6c7e254, 0x2878a088, 0x17395c4b, 0x829b32b0,
    0x1a2e6872, 0x8b80169d, 0xfe1fdf21, 0x8a831298,
    0x091b242d, 0xc94603ca, 0x879426a1, 0x4ed2256b,
    0xe13ea342, 0x2e72b896, 0xe431b753, 0xe03da747,
    0xeb208b60, 0x90ad7aea, 0xa4f1aa0e, 0x1e227866,
    0x85922eab, 0x60a09dfd, 0x00000000, 0x256f94b1,
    0xf401f703, 0xf10ee312, 0x94a16afe, 0x0b1d2c27,
    0xe734bb5c, 0x759fc9bc, 0xef2c9b74, 0x345cd0e4,
    0x3153c4f5, 0xd46177a3, 0xd06d67b7, 0x869722a4,
    0x7e82e59b, 0xadea8e23, 0xfd1ad32e, 0x297ba48d,
    0x3050c0f0, 0x3b4decd7, 0x9fbc46d9, 0xf815c73f,
    0xc6573ff9, 0x13354c5f, 0x060a181e, 0x050f1411,
    0xc55233f6, 0x11334455, 0x7799c1b6, 0x7c84ed91,
    0x7a8ef58f, 0x7888fd85, 0x365ad8ee, 0x1c24706c,
    0x394be4dd, 0x59eb7920, 0x18286078, 0x56fa4513,
    0xb3c8f645, 0xb0cdfa4a, 0x246c90b4, 0x206080a0,
    0xb2cbf240, 0x92ab72e0, 0xa3f8b615, 0xc05d27e7,
    0x44cc0d49, 0x62a695f7, 0x10304050, 0xb4c1ea5e,
    0x84912aae, 0x43c51152, 0x93a876e5, 0xc25b2fed,
    0x4ade357f, 0xbddace73, 0x8f8c0689, 0x2d77b499,
    0xbcd9ca76, 0x9cb94ad6, 0x6abeb5df, 0x40c01d5d,
    0xcf4c1bd4, 0xa2fbb210, 0x809d3aba, 0x4fd1216e,
    0x1f217c63, 0xca430fc5, 0xaae39238, 0x42c61557
  ];
  
  Khazad.arrU5 = [
    0xb9bb016a, 0x9ae5b166, 0x65e2cd14, 0x8725511b,
    0xa2f7a457, 0xd6d003be, 0xded604b5, 0x52b3fe85,
    0xbafdad4a, 0x09cf63e0, 0x1c098496, 0x91a51a4d,
    0xa73d4d37, 0xaaf1a35c, 0xa47be117, 0x5ab5f98e,
    0x0346ac20, 0xe6c41184, 0xcc55c268, 0xc6dc0da8,
    0x85aa99d0, 0xb2fbaa41, 0xe2c79c0f, 0x59f355ae,
    0xbefe20c1, 0x7aade5a2, 0x29d77fcc, 0xbc71e80a,
    0x96e03be6, 0x8dac9edb, 0xd1952215, 0xb332ceaa,
    0x4b709373, 0x8463fd3b, 0xfc41d052, 0xac7de61c,
    0x43769478, 0xb1bd0661, 0x329bdaf1, 0x577917e5,
    0x41f95cb3, 0x16804b56, 0x7f670cc2, 0xdc59cc7e,
    0x61e1409f, 0xcb10e3c3, 0xe181302f, 0x100c0e16,
    0x2e925e67, 0x6ea2663f, 0xe84e53cf, 0xa0786c9c,
    0x56b0730e, 0x3f57349a, 0x9ee63ced, 0xd2d38e35,
    0xc2df8023, 0xaef22ed7, 0xcf136e48, 0x2694596c,
    0xdf1f605e, 0xeac19b04, 0x477519f3, 0xdad5893e,
    0xeb08ffef, 0x2dd4f247, 0xab38c7b7, 0x3b54b911,
    0x134aa236, 0x9c69f426, 0x5f7f10ee, 0x04038d8b,
    0xc8564fe3, 0x69e74794, 0xd31aeade, 0x3c1198ba,
    0x78222d69, 0x38121531, 0x11c56afd, 0x8b20db9b,
    0x40303858, 0xa87e6b97, 0x682e237f, 0x20181c2c,
    0x0806070b, 0x074521ab, 0xb6f827ca, 0x97295f0d,
    0xef0b7264, 0xa6f429dc, 0xf58eb3b2, 0xb074628a,
    0xe582bda4, 0xa5b285fc, 0x4f731ef8, 0xdd90a895,
    0xa1b10877, 0xbf37442a, 0x1b4ca53d, 0xb5be8bea,
    0x92e3b66d, 0xaf3b4a3c, 0xff077c72, 0x140f839d,
    0xb7314321, 0x34179fb1, 0xe30ef8e4, 0x4dfcd633,
    0xed84baaf, 0xcad98728, 0x25d2f54c, 0x0a89cfc0,
    0x60282474, 0x0f4326a0, 0x676d05df, 0x2f5b3a8c,
    0x180a091d, 0x46bc7d18, 0x82efb87b, 0xfece1899,
    0x86ec35f0, 0xfacd9512, 0x8eea32fb, 0x17492fbd,
    0xf6c81f92, 0xcd9ca683, 0x0e8a424b, 0xfd88b4b9,
    0x8326dc90, 0xc453c563, 0x51f552a5, 0xb477ef01,
    0x3352be1a, 0xa9b70f7c, 0x76a86f22, 0x19c36df6,
    0x6f6b02d4, 0x62a7ecbf, 0x31dd76d1, 0x21d178c7,
    0x1f4f28b6, 0x503c364e, 0x028fc8cb, 0xc316e4c8,
    0xc1992c03, 0x0dccee6b, 0x7b648149, 0x235eb00c,
    0x99a31d46, 0x45fad138, 0x7c21a0e2, 0x906c7ea6,
    0x6c2daef4, 0xd85a41f5, 0x70242a62, 0x05cae960,
    0xfb04f1f9, 0x1283c6dd, 0x15c6e776, 0x3e9e5071,
    0x72abe2a9, 0x7de8c409, 0x9b2cd58d, 0x636e8854,
    0xd993251e, 0x5df0d825, 0xb8726581, 0x642ba9ff,
    0xd05c46fe, 0x2c1d96ac, 0xa33ec0bc, 0x241b91a7,
    0x48363f53, 0x068c4540, 0x4c35b2d8, 0x4ab9f798,
    0x5b7c9d65, 0x6de4ca1f, 0x73628642, 0x537a9a6e,
    0x0b40ab2b, 0xf447d759, 0x49ff5bb8, 0xf0445ad2,
    0x5c39bcce, 0x275d3d87, 0x00000000, 0x35defb5a,
    0xf302f6f2, 0xdb1cedd5, 0xd45fcb75, 0x583a3145,
    0x6b688f5f, 0x8f235610, 0x2b58b707, 0xbdb88ce1,
    0x95a697c6, 0xeec2168f, 0xceda0aa3, 0x4433b5d3,
    0xd7196755, 0x01c964eb, 0xbb34c9a1, 0x55f6df2e,
    0x9da090cd, 0xc59aa188, 0x8c65fa30, 0x932ad286,
    0x7eae6829, 0x986a79ad, 0x3014123a, 0x281e1b27,
    0x66a46134, 0x886677bb, 0x9f2f5806, 0xc7156943,
    0xf7017b79, 0xe70d756f, 0xadb482f7, 0xe04854c4,
    0xd596af9e, 0xf2cb9219, 0xc05048e8, 0x8ae9bf70,
    0xf18d3e39, 0xe9873724, 0x3dd8fc51, 0x1dc0e07d,
    0xf98b3932, 0xe44bd94f, 0x71ed4e89, 0x4eba7a13,
    0x1a85c1d6, 0x37513391, 0x806070b0, 0xc99f2b08,
    0x543fbbc5, 0x2297d4e7, 0xec4dde44, 0x5eb67405,
    0x6aa1ebb4, 0x81a9145b, 0x0c058a80, 0x75eec302,
    0x89af1350, 0x946ff32d, 0x77610bc9, 0x3a9dddfa,
    0x3698577a, 0x79eb4982, 0x7427a7e9, 0x42bff093,
    0xf8425dd9, 0x1e864c5d, 0x39db71da, 0x2a91d3ec
  ];
  
  Khazad.arrV5 = [
    0xd3ba68d2, 0xfc54194d, 0x712f93bc, 0x9c74b9cd,
    0xf5530251, 0x68d3b86b, 0x6bd2bd6f, 0xd74d6429,
    0xf0500d5d, 0xe9ac268a, 0x8a8d830e, 0xdcbf79c6,
    0x9070addd, 0xf6520755, 0xb39ac852, 0xd44c612d,
    0x23ea658f, 0x62d5a673, 0xa497f166, 0x6ed1b263,
    0x5533ffcc, 0xf3510859, 0xed5b2a71, 0xf7a604a2,
    0x7fde815f, 0xd848753d, 0xe5a8329a, 0xb699c75e,
    0x70db904b, 0x5632fac8, 0xc4b751e6, 0x19fc2bd7,
    0x38e348ab, 0xbf9edc42, 0xae91ef7e, 0xb09bcd56,
    0x3be24daf, 0xd0bb6dd6, 0xc3415819, 0xb26ecba5,
    0xf2a50bae, 0x40cbc00b, 0xbd6bdab1, 0xa295fb6e,
    0xfea11fbe, 0x08f318eb, 0xceb14ffe, 0x06020a08,
    0x49ccdb17, 0x51c4f337, 0x271d6974, 0x3c144450,
    0x58c3e82b, 0xa563f291, 0x73da954f, 0xe75d3469,
    0xe15f3e61, 0x79dc8b57, 0x877d94e9, 0x4acdde13,
    0x817f9ee1, 0xee5a2f75, 0xb46cc1ad, 0xe45c316d,
    0x04f70cfb, 0x6a26be98, 0x1cff24db, 0x2aed7e93,
    0x25e86f87, 0xba9dd34e, 0xb16fcea1, 0x8f8e8c02,
    0x2b197d64, 0xfda01aba, 0x0df017e7, 0x8689971e,
    0x110f333c, 0x09071b1c, 0xecaf2986, 0x10fb30cb,
    0x18082820, 0x3f154154, 0x170d3934, 0x0c041410,
    0x03010504, 0xac64e98d, 0x7cdf845b, 0x9a76b3c5,
    0x8b7980f9, 0x7add8e53, 0x473dc9f4, 0x3a164e58,
    0x413fc3fc, 0x5937ebdc, 0xb76dc4a9, 0x4838d8e0,
    0xd6b967de, 0x9573a2d1, 0x26e96a83, 0x5f35e1d4,
    0xff551c49, 0x9371a8d9, 0x8d7b8af1, 0x898c860a,
    0x9672a7d5, 0x8588921a, 0x07f609ff, 0x7e2a82a8,
    0x423ec6f8, 0xe25e3b65, 0x6927bb9c, 0xca464305,
    0x140c3c30, 0xaf65ec89, 0xb868d5bd, 0xa361f899,
    0x05030f0c, 0x5ec1e223, 0xf9571641, 0x67d6a97f,
    0x76d99a43, 0xe858257d, 0x75d89f47, 0xaa66e385,
    0x64d7ac7b, 0x4e3ad2e8, 0x45c8cf07, 0x443cccf0,
    0x13fa35cf, 0xa796f462, 0xf4a701a6, 0xb598c25a,
    0x29ec7b97, 0xd5b862da, 0x54c7fc3b, 0xefae2c82,
    0xbb69d0b9, 0xdd4b7a31, 0xe0ab3d96, 0xe6a9379e,
    0xa967e681, 0x1e0a2228, 0xc9474601, 0x0bf21def,
    0xc2b55bee, 0x6622aa88, 0x32e556b3, 0x2fee719f,
    0xdfbe7cc2, 0x7d2b87ac, 0x9e81bf3e, 0x36125a48,
    0x9883b536, 0x2d1b776c, 0x120e3638, 0x6523af8c,
    0x02f506f3, 0xcf454c09, 0x6321a584, 0x4fced11f,
    0xdb497039, 0x742c9cb0, 0x16f93ac3, 0x37e659bf,
    0xc7b654e2, 0x782888a0, 0x39174b5c, 0x9b82b032,
    0x2e1a7268, 0x808b9d16, 0x1ffe21df, 0x838a9812,
    0x1b092d24, 0x46c9ca03, 0x9487a126, 0xd24e6b25,
    0x3ee142a3, 0x722e96b8, 0x31e453b7, 0x3de047a7,
    0x20eb608b, 0xad90ea7a, 0xf1a40eaa, 0x221e6678,
    0x9285ab2e, 0xa060fd9d, 0x00000000, 0x6f25b194,
    0x01f403f7, 0x0ef112e3, 0xa194fe6a, 0x1d0b272c,
    0x34e75cbb, 0x9f75bcc9, 0x2cef749b, 0x5c34e4d0,
    0x5331f5c4, 0x61d4a377, 0x6dd0b767, 0x9786a422,
    0x827e9be5, 0xeaad238e, 0x1afd2ed3, 0x7b298da4,
    0x5030f0c0, 0x4d3bd7ec, 0xbc9fd946, 0x15f83fc7,
    0x57c6f93f, 0x35135f4c, 0x0a061e18, 0x0f051114,
    0x52c5f633, 0x33115544, 0x9977b6c1, 0x847c91ed,
    0x8e7a8ff5, 0x887885fd, 0x5a36eed8, 0x241c6c70,
    0x4b39dde4, 0xeb592079, 0x28187860, 0xfa561345,
    0xc8b345f6, 0xcdb04afa, 0x6c24b490, 0x6020a080,
    0xcbb240f2, 0xab92e072, 0xf8a315b6, 0x5dc0e727,
    0xcc44490d, 0xa662f795, 0x30105040, 0xc1b45eea,
    0x9184ae2a, 0xc5435211, 0xa893e576, 0x5bc2ed2f,
    0xde4a7f35, 0xdabd73ce, 0x8c8f8906, 0x772d99b4,
    0xd9bc76ca, 0xb99cd64a, 0xbe6adfb5, 0xc0405d1d,
    0x4ccfd41b, 0xfba210b2, 0x9d80ba3a, 0xd14f6e21,
    0x211f637c, 0x43cac50f, 0xe3aa3892, 0xc6425715
  ];
  
  Khazad.arrU6 = [
    0x6a01bbb9, 0x66b1e59a, 0x14cde265, 0x1b512587,
    0x57a4f7a2, 0xbe03d0d6, 0xb504d6de, 0x85feb352,
    0x4aadfdba, 0xe063cf09, 0x9684091c, 0x4d1aa591,
    0x374d3da7, 0x5ca3f1aa, 0x17e17ba4, 0x8ef9b55a,
    0x20ac4603, 0x8411c4e6, 0x68c255cc, 0xa80ddcc6,
    0xd099aa85, 0x41aafbb2, 0x0f9cc7e2, 0xae55f359,
    0xc120febe, 0xa2e5ad7a, 0xcc7fd729, 0x0ae871bc,
    0xe63be096, 0xdb9eac8d, 0x152295d1, 0xaace32b3,
    0x7393704b, 0x3bfd6384, 0x52d041fc, 0x1ce67dac,
    0x78947643, 0x6106bdb1, 0xf1da9b32, 0xe5177957,
    0xb35cf941, 0x564b8016, 0xc20c677f, 0x7ecc59dc,
    0x9f40e161, 0xc3e310cb, 0x2f3081e1, 0x160e0c10,
    0x675e922e, 0x3f66a26e, 0xcf534ee8, 0x9c6c78a0,
    0x0e73b056, 0x9a34573f, 0xed3ce69e, 0x358ed3d2,
    0x2380dfc2, 0xd72ef2ae, 0x486e13cf, 0x6c599426,
    0x5e601fdf, 0x049bc1ea, 0xf3197547, 0x3e89d5da,
    0xefff08eb, 0x47f2d42d, 0xb7c738ab, 0x11b9543b,
    0x36a24a13, 0x26f4699c, 0xee107f5f, 0x8b8d0304,
    0xe34f56c8, 0x9447e769, 0xdeea1ad3, 0xba98113c,
    0x692d2278, 0x31151238, 0xfd6ac511, 0x9bdb208b,
    0x58383040, 0x976b7ea8, 0x7f232e68, 0x2c1c1820,
    0x0b070608, 0xab214507, 0xca27f8b6, 0x0d5f2997,
    0x64720bef, 0xdc29f4a6, 0xb2b38ef5, 0x8a6274b0,
    0xa4bd82e5, 0xfc85b2a5, 0xf81e734f, 0x95a890dd,
    0x7708b1a1, 0x2a4437bf, 0x3da54c1b, 0xea8bbeb5,
    0x6db6e392, 0x3c4a3baf, 0x727c07ff, 0x9d830f14,
    0x214331b7, 0xb19f1734, 0xe4f80ee3, 0x33d6fc4d,
    0xafba84ed, 0x2887d9ca, 0x4cf5d225, 0xc0cf890a,
    0x74242860, 0xa026430f, 0xdf056d67, 0x8c3a5b2f,
    0x1d090a18, 0x187dbc46, 0x7bb8ef82, 0x9918cefe,
    0xf035ec86, 0x1295cdfa, 0xfb32ea8e, 0xbd2f4917,
    0x921fc8f6, 0x83a69ccd, 0x4b428a0e, 0xb9b488fd,
    0x90dc2683, 0x63c553c4, 0xa552f551, 0x01ef77b4,
    0x1abe5233, 0x7c0fb7a9, 0x226fa876, 0xf66dc319,
    0xd4026b6f, 0xbfeca762, 0xd176dd31, 0xc778d121,
    0xb6284f1f, 0x4e363c50, 0xcbc88f02, 0xc8e416c3,
    0x032c99c1, 0x6beecc0d, 0x4981647b, 0x0cb05e23,
    0x461da399, 0x38d1fa45, 0xe2a0217c, 0xa67e6c90,
    0xf4ae2d6c, 0xf5415ad8, 0x622a2470, 0x60e9ca05,
    0xf9f104fb, 0xddc68312, 0x76e7c615, 0x71509e3e,
    0xa9e2ab72, 0x09c4e87d, 0x8dd52c9b, 0x54886e63,
    0x1e2593d9, 0x25d8f05d, 0x816572b8, 0xffa92b64,
    0xfe465cd0, 0xac961d2c, 0xbcc03ea3, 0xa7911b24,
    0x533f3648, 0x40458c06, 0xd8b2354c, 0x98f7b94a,
    0x659d7c5b, 0x1fcae46d, 0x42866273, 0x6e9a7a53,
    0x2bab400b, 0x59d747f4, 0xb85bff49, 0xd25a44f0,
    0xcebc395c, 0x873d5d27, 0x00000000, 0x5afbde35,
    0xf2f602f3, 0xd5ed1cdb, 0x75cb5fd4, 0x45313a58,
    0x5f8f686b, 0x1056238f, 0x07b7582b, 0xe18cb8bd,
    0xc697a695, 0x8f16c2ee, 0xa30adace, 0xd3b53344,
    0x556719d7, 0xeb64c901, 0xa1c934bb, 0x2edff655,
    0xcd90a09d, 0x88a19ac5, 0x30fa658c, 0x86d22a93,
    0x2968ae7e, 0xad796a98, 0x3a121430, 0x271b1e28,
    0x3461a466, 0xbb776688, 0x06582f9f, 0x436915c7,
    0x797b01f7, 0x6f750de7, 0xf782b4ad, 0xc45448e0,
    0x9eaf96d5, 0x1992cbf2, 0xe84850c0, 0x70bfe98a,
    0x393e8df1, 0x243787e9, 0x51fcd83d, 0x7de0c01d,
    0x32398bf9, 0x4fd94be4, 0x894eed71, 0x137aba4e,
    0xd6c1851a, 0x91335137, 0xb0706080, 0x082b9fc9,
    0xc5bb3f54, 0xe7d49722, 0x44de4dec, 0x0574b65e,
    0xb4eba16a, 0x5b14a981, 0x808a050c, 0x02c3ee75,
    0x5013af89, 0x2df36f94, 0xc90b6177, 0xfadd9d3a,
    0x7a579836, 0x8249eb79, 0xe9a72774, 0x93f0bf42,
    0xd95d42f8, 0x5d4c861e, 0xda71db39, 0xecd3912a
  ];
  
  Khazad.arrV6 = [
    0xd268bad3, 0x4d1954fc, 0xbc932f71, 0xcdb9749c,
    0x510253f5, 0x6bb8d368, 0x6fbdd26b, 0x29644dd7,
    0x5d0d50f0, 0x8a26ace9, 0x0e838d8a, 0xc679bfdc,
    0xddad7090, 0x550752f6, 0x52c89ab3, 0x2d614cd4,
    0x8f65ea23, 0x73a6d562, 0x66f197a4, 0x63b2d16e,
    0xccff3355, 0x590851f3, 0x712a5bed, 0xa204a6f7,
    0x5f81de7f, 0x3d7548d8, 0x9a32a8e5, 0x5ec799b6,
    0x4b90db70, 0xc8fa3256, 0xe651b7c4, 0xd72bfc19,
    0xab48e338, 0x42dc9ebf, 0x7eef91ae, 0x56cd9bb0,
    0xaf4de23b, 0xd66dbbd0, 0x195841c3, 0xa5cb6eb2,
    0xae0ba5f2, 0x0bc0cb40, 0xb1da6bbd, 0x6efb95a2,
    0xbe1fa1fe, 0xeb18f308, 0xfe4fb1ce, 0x080a0206,
    0x17dbcc49, 0x37f3c451, 0x74691d27, 0x5044143c,
    0x2be8c358, 0x91f263a5, 0x4f95da73, 0x69345de7,
    0x613e5fe1, 0x578bdc79, 0xe9947d87, 0x13decd4a,
    0xe19e7f81, 0x752f5aee, 0xadc16cb4, 0x6d315ce4,
    0xfb0cf704, 0x98be266a, 0xdb24ff1c, 0x937eed2a,
    0x876fe825, 0x4ed39dba, 0xa1ce6fb1, 0x028c8e8f,
    0x647d192b, 0xba1aa0fd, 0xe717f00d, 0x1e978986,
    0x3c330f11, 0x1c1b0709, 0x8629afec, 0xcb30fb10,
    0x20280818, 0x5441153f, 0x34390d17, 0x1014040c,
    0x04050103, 0x8de964ac, 0x5b84df7c, 0xc5b3769a,
    0xf980798b, 0x538edd7a, 0xf4c93d47, 0x584e163a,
    0xfcc33f41, 0xdceb3759, 0xa9c46db7, 0xe0d83848,
    0xde67b9d6, 0xd1a27395, 0x836ae926, 0xd4e1355f,
    0x491c55ff, 0xd9a87193, 0xf18a7b8d, 0x0a868c89,
    0xd5a77296, 0x1a928885, 0xff09f607, 0xa8822a7e,
    0xf8c63e42, 0x653b5ee2, 0x9cbb2769, 0x054346ca,
    0x303c0c14, 0x89ec65af, 0xbdd568b8, 0x99f861a3,
    0x0c0f0305, 0x23e2c15e, 0x411657f9, 0x7fa9d667,
    0x439ad976, 0x7d2558e8, 0x479fd875, 0x85e366aa,
    0x7bacd764, 0xe8d23a4e, 0x07cfc845, 0xf0cc3c44,
    0xcf35fa13, 0x62f496a7, 0xa601a7f4, 0x5ac298b5,
    0x977bec29, 0xda62b8d5, 0x3bfcc754, 0x822caeef,
    0xb9d069bb, 0x317a4bdd, 0x963dabe0, 0x9e37a9e6,
    0x81e667a9, 0x28220a1e, 0x014647c9, 0xef1df20b,
    0xee5bb5c2, 0x88aa2266, 0xb356e532, 0x9f71ee2f,
    0xc27cbedf, 0xac872b7d, 0x3ebf819e, 0x485a1236,
    0x36b58398, 0x6c771b2d, 0x38360e12, 0x8caf2365,
    0xf306f502, 0x094c45cf, 0x84a52163, 0x1fd1ce4f,
    0x397049db, 0xb09c2c74, 0xc33af916, 0xbf59e637,
    0xe254b6c7, 0xa0882878, 0x5c4b1739, 0x32b0829b,
    0x68721a2e, 0x169d8b80, 0xdf21fe1f, 0x12988a83,
    0x242d091b, 0x03cac946, 0x26a18794, 0x256b4ed2,
    0xa342e13e, 0xb8962e72, 0xb753e431, 0xa747e03d,
    0x8b60eb20, 0x7aea90ad, 0xaa0ea4f1, 0x78661e22,
    0x2eab8592, 0x9dfd60a0, 0x00000000, 0x94b1256f,
    0xf703f401, 0xe312f10e, 0x6afe94a1, 0x2c270b1d,
    0xbb5ce734, 0xc9bc759f, 0x9b74ef2c, 0xd0e4345c,
    0xc4f53153, 0x77a3d461, 0x67b7d06d, 0x22a48697,
    0xe59b7e82, 0x8e23adea, 0xd32efd1a, 0xa48d297b,
    0xc0f03050, 0xecd73b4d, 0x46d99fbc, 0xc73ff815,
    0x3ff9c657, 0x4c5f1335, 0x181e060a, 0x1411050f,
    0x33f6c552, 0x44551133, 0xc1b67799, 0xed917c84,
    0xf58f7a8e, 0xfd857888, 0xd8ee365a, 0x706c1c24,
    0xe4dd394b, 0x792059eb, 0x60781828, 0x451356fa,
    0xf645b3c8, 0xfa4ab0cd, 0x90b4246c, 0x80a02060,
    0xf240b2cb, 0x72e092ab, 0xb615a3f8, 0x27e7c05d,
    0x0d4944cc, 0x95f762a6, 0x40501030, 0xea5eb4c1,
    0x2aae8491, 0x115243c5, 0x76e593a8, 0x2fedc25b,
    0x357f4ade, 0xce73bdda, 0x06898f8c, 0xb4992d77,
    0xca76bcd9, 0x4ad69cb9, 0xb5df6abe, 0x1d5d40c0,
    0x1bd4cf4c, 0xb210a2fb, 0x3aba809d, 0x216e4fd1,
    0x7c631f21, 0x0fc5ca43, 0x9238aae3, 0x155742c6
  ];
  
  Khazad.arrU7 = [
    0x016ab9bb, 0xb1669ae5, 0xcd1465e2, 0x511b8725,
    0xa457a2f7, 0x03bed6d0, 0x04b5ded6, 0xfe8552b3,
    0xad4abafd, 0x63e009cf, 0x84961c09, 0x1a4d91a5,
    0x4d37a73d, 0xa35caaf1, 0xe117a47b, 0xf98e5ab5,
    0xac200346, 0x1184e6c4, 0xc268cc55, 0x0da8c6dc,
    0x99d085aa, 0xaa41b2fb, 0x9c0fe2c7, 0x55ae59f3,
    0x20c1befe, 0xe5a27aad, 0x7fcc29d7, 0xe80abc71,
    0x3be696e0, 0x9edb8dac, 0x2215d195, 0xceaab332,
    0x93734b70, 0xfd3b8463, 0xd052fc41, 0xe61cac7d,
    0x94784376, 0x0661b1bd, 0xdaf1329b, 0x17e55779,
    0x5cb341f9, 0x4b561680, 0x0cc27f67, 0xcc7edc59,
    0x409f61e1, 0xe3c3cb10, 0x302fe181, 0x0e16100c,
    0x5e672e92, 0x663f6ea2, 0x53cfe84e, 0x6c9ca078,
    0x730e56b0, 0x349a3f57, 0x3ced9ee6, 0x8e35d2d3,
    0x8023c2df, 0x2ed7aef2, 0x6e48cf13, 0x596c2694,
    0x605edf1f, 0x9b04eac1, 0x19f34775, 0x893edad5,
    0xffefeb08, 0xf2472dd4, 0xc7b7ab38, 0xb9113b54,
    0xa236134a, 0xf4269c69, 0x10ee5f7f, 0x8d8b0403,
    0x4fe3c856, 0x479469e7, 0xeaded31a, 0x98ba3c11,
    0x2d697822, 0x15313812, 0x6afd11c5, 0xdb9b8b20,
    0x38584030, 0x6b97a87e, 0x237f682e, 0x1c2c2018,
    0x070b0806, 0x21ab0745, 0x27cab6f8, 0x5f0d9729,
    0x7264ef0b, 0x29dca6f4, 0xb3b2f58e, 0x628ab074,
    0xbda4e582, 0x85fca5b2, 0x1ef84f73, 0xa895dd90,
    0x0877a1b1, 0x442abf37, 0xa53d1b4c, 0x8beab5be,
    0xb66d92e3, 0x4a3caf3b, 0x7c72ff07, 0x839d140f,
    0x4321b731, 0x9fb13417, 0xf8e4e30e, 0xd6334dfc,
    0xbaafed84, 0x8728cad9, 0xf54c25d2, 0xcfc00a89,
    0x24746028, 0x26a00f43, 0x05df676d, 0x3a8c2f5b,
    0x091d180a, 0x7d1846bc, 0xb87b82ef, 0x1899fece,
    0x35f086ec, 0x9512facd, 0x32fb8eea, 0x2fbd1749,
    0x1f92f6c8, 0xa683cd9c, 0x424b0e8a, 0xb4b9fd88,
    0xdc908326, 0xc563c453, 0x52a551f5, 0xef01b477,
    0xbe1a3352, 0x0f7ca9b7, 0x6f2276a8, 0x6df619c3,
    0x02d46f6b, 0xecbf62a7, 0x76d131dd, 0x78c721d1,
    0x28b61f4f, 0x364e503c, 0xc8cb028f, 0xe4c8c316,
    0x2c03c199, 0xee6b0dcc, 0x81497b64, 0xb00c235e,
    0x1d4699a3, 0xd13845fa, 0xa0e27c21, 0x7ea6906c,
    0xaef46c2d, 0x41f5d85a, 0x2a627024, 0xe96005ca,
    0xf1f9fb04, 0xc6dd1283, 0xe77615c6, 0x50713e9e,
    0xe2a972ab, 0xc4097de8, 0xd58d9b2c, 0x8854636e,
    0x251ed993, 0xd8255df0, 0x6581b872, 0xa9ff642b,
    0x46fed05c, 0x96ac2c1d, 0xc0bca33e, 0x91a7241b,
    0x3f534836, 0x4540068c, 0xb2d84c35, 0xf7984ab9,
    0x9d655b7c, 0xca1f6de4, 0x86427362, 0x9a6e537a,
    0xab2b0b40, 0xd759f447, 0x5bb849ff, 0x5ad2f044,
    0xbcce5c39, 0x3d87275d, 0x00000000, 0xfb5a35de,
    0xf6f2f302, 0xedd5db1c, 0xcb75d45f, 0x3145583a,
    0x8f5f6b68, 0x56108f23, 0xb7072b58, 0x8ce1bdb8,
    0x97c695a6, 0x168feec2, 0x0aa3ceda, 0xb5d34433,
    0x6755d719, 0x64eb01c9, 0xc9a1bb34, 0xdf2e55f6,
    0x90cd9da0, 0xa188c59a, 0xfa308c65, 0xd286932a,
    0x68297eae, 0x79ad986a, 0x123a3014, 0x1b27281e,
    0x613466a4, 0x77bb8866, 0x58069f2f, 0x6943c715,
    0x7b79f701, 0x756fe70d, 0x82f7adb4, 0x54c4e048,
    0xaf9ed596, 0x9219f2cb, 0x48e8c050, 0xbf708ae9,
    0x3e39f18d, 0x3724e987, 0xfc513dd8, 0xe07d1dc0,
    0x3932f98b, 0xd94fe44b, 0x4e8971ed, 0x7a134eba,
    0xc1d61a85, 0x33913751, 0x70b08060, 0x2b08c99f,
    0xbbc5543f, 0xd4e72297, 0xde44ec4d, 0x74055eb6,
    0xebb46aa1, 0x145b81a9, 0x8a800c05, 0xc30275ee,
    0x135089af, 0xf32d946f, 0x0bc97761, 0xddfa3a9d,
    0x577a3698, 0x498279eb, 0xa7e97427, 0xf09342bf,
    0x5dd9f842, 0x4c5d1e86, 0x71da39db, 0xd3ec2a91
  ];
  
  Khazad.arrV7 = [
    0x68d2d3ba, 0x194dfc54, 0x93bc712f, 0xb9cd9c74,
    0x0251f553, 0xb86b68d3, 0xbd6f6bd2, 0x6429d74d,
    0x0d5df050, 0x268ae9ac, 0x830e8a8d, 0x79c6dcbf,
    0xaddd9070, 0x0755f652, 0xc852b39a, 0x612dd44c,
    0x658f23ea, 0xa67362d5, 0xf166a497, 0xb2636ed1,
    0xffcc5533, 0x0859f351, 0x2a71ed5b, 0x04a2f7a6,
    0x815f7fde, 0x753dd848, 0x329ae5a8, 0xc75eb699,
    0x904b70db, 0xfac85632, 0x51e6c4b7, 0x2bd719fc,
    0x48ab38e3, 0xdc42bf9e, 0xef7eae91, 0xcd56b09b,
    0x4daf3be2, 0x6dd6d0bb, 0x5819c341, 0xcba5b26e,
    0x0baef2a5, 0xc00b40cb, 0xdab1bd6b, 0xfb6ea295,
    0x1fbefea1, 0x18eb08f3, 0x4ffeceb1, 0x0a080602,
    0xdb1749cc, 0xf33751c4, 0x6974271d, 0x44503c14,
    0xe82b58c3, 0xf291a563, 0x954f73da, 0x3469e75d,
    0x3e61e15f, 0x8b5779dc, 0x94e9877d, 0xde134acd,
    0x9ee1817f, 0x2f75ee5a, 0xc1adb46c, 0x316de45c,
    0x0cfb04f7, 0xbe986a26, 0x24db1cff, 0x7e932aed,
    0x6f8725e8, 0xd34eba9d, 0xcea1b16f, 0x8c028f8e,
    0x7d642b19, 0x1abafda0, 0x17e70df0, 0x971e8689,
    0x333c110f, 0x1b1c0907, 0x2986ecaf, 0x30cb10fb,
    0x28201808, 0x41543f15, 0x3934170d, 0x14100c04,
    0x05040301, 0xe98dac64, 0x845b7cdf, 0xb3c59a76,
    0x80f98b79, 0x8e537add, 0xc9f4473d, 0x4e583a16,
    0xc3fc413f, 0xebdc5937, 0xc4a9b76d, 0xd8e04838,
    0x67ded6b9, 0xa2d19573, 0x6a8326e9, 0xe1d45f35,
    0x1c49ff55, 0xa8d99371, 0x8af18d7b, 0x860a898c,
    0xa7d59672, 0x921a8588, 0x09ff07f6, 0x82a87e2a,
    0xc6f8423e, 0x3b65e25e, 0xbb9c6927, 0x4305ca46,
    0x3c30140c, 0xec89af65, 0xd5bdb868, 0xf899a361,
    0x0f0c0503, 0xe2235ec1, 0x1641f957, 0xa97f67d6,
    0x9a4376d9, 0x257de858, 0x9f4775d8, 0xe385aa66,
    0xac7b64d7, 0xd2e84e3a, 0xcf0745c8, 0xccf0443c,
    0x35cf13fa, 0xf462a796, 0x01a6f4a7, 0xc25ab598,
    0x7b9729ec, 0x62dad5b8, 0xfc3b54c7, 0x2c82efae,
    0xd0b9bb69, 0x7a31dd4b, 0x3d96e0ab, 0x379ee6a9,
    0xe681a967, 0x22281e0a, 0x4601c947, 0x1def0bf2,
    0x5beec2b5, 0xaa886622, 0x56b332e5, 0x719f2fee,
    0x7cc2dfbe, 0x87ac7d2b, 0xbf3e9e81, 0x5a483612,
    0xb5369883, 0x776c2d1b, 0x3638120e, 0xaf8c6523,
    0x06f302f5, 0x4c09cf45, 0xa5846321, 0xd11f4fce,
    0x7039db49, 0x9cb0742c, 0x3ac316f9, 0x59bf37e6,
    0x54e2c7b6, 0x88a07828, 0x4b5c3917, 0xb0329b82,
    0x72682e1a, 0x9d16808b, 0x21df1ffe, 0x9812838a,
    0x2d241b09, 0xca0346c9, 0xa1269487, 0x6b25d24e,
    0x42a33ee1, 0x96b8722e, 0x53b731e4, 0x47a73de0,
    0x608b20eb, 0xea7aad90, 0x0eaaf1a4, 0x6678221e,
    0xab2e9285, 0xfd9da060, 0x00000000, 0xb1946f25,
    0x03f701f4, 0x12e30ef1, 0xfe6aa194, 0x272c1d0b,
    0x5cbb34e7, 0xbcc99f75, 0x749b2cef, 0xe4d05c34,
    0xf5c45331, 0xa37761d4, 0xb7676dd0, 0xa4229786,
    0x9be5827e, 0x238eeaad, 0x2ed31afd, 0x8da47b29,
    0xf0c05030, 0xd7ec4d3b, 0xd946bc9f, 0x3fc715f8,
    0xf93f57c6, 0x5f4c3513, 0x1e180a06, 0x11140f05,
    0xf63352c5, 0x55443311, 0xb6c19977, 0x91ed847c,
    0x8ff58e7a, 0x85fd8878, 0xeed85a36, 0x6c70241c,
    0xdde44b39, 0x2079eb59, 0x78602818, 0x1345fa56,
    0x45f6c8b3, 0x4afacdb0, 0xb4906c24, 0xa0806020,
    0x40f2cbb2, 0xe072ab92, 0x15b6f8a3, 0xe7275dc0,
    0x490dcc44, 0xf795a662, 0x50403010, 0x5eeac1b4,
    0xae2a9184, 0x5211c543, 0xe576a893, 0xed2f5bc2,
    0x7f35de4a, 0x73cedabd, 0x89068c8f, 0x99b4772d,
    0x76cad9bc, 0xd64ab99c, 0xdfb5be6a, 0x5d1dc040,
    0xd41b4ccf, 0x10b2fba2, 0xba3a9d80, 0x6e21d14f,
    0x637c211f, 0xc50f43ca, 0x3892e3aa, 0x5715c642
  ];
  
  Khazad.arrC=[
    [0xba542f74, 0x53d3d24d],
    [0x50ac8dbf, 0x70529a4c],
    [0xead597d1, 0x33515ba6],
    [0xde48a899, 0xdb32b7fc],
    [0xe39e919b, 0xe2bb416e],
    [0xa5cb6b95, 0xa1f3b102],
    [0xccc41d14, 0xc363da5d],
    [0x5fdc7dcd, 0x7f5a6c5c],
    [0xf726ffed, 0xe89d6f8e]
  ];
  
  Khazad.szSBox=
    "\uba54\u2f74\u53d3\ud24d\u50ac\u8dbf\u7052\u9a4c" +
    "\uead5\u97d1\u3351\u5ba6\ude48\ua899\udb32\ub7fc" +
    "\ue39e\u919b\ue2bb\u416e\ua5cb\u6b95\ua1f3\ub102" +
    "\uccc4\u1d14\uc363\uda5d\u5fdc\u7dcd\u7f5a\u6c5c" +
    "\uf726\uffed\ue89d\u6f8e\u19a0\uf089\u0f07\uaffb" +
    "\u0815\u0d04\u0164\udf76\u79dd\u3d16\u3f37\u6d38" +
    "\ub973\ue935\u5571\u7b8c\u7288\uf62a\u3e5e\u2746" +
    "\u0c65\u6861\u03c1\u57d6\ud958\ud866\ud73a\uc83c" +
    "\ufa96\ua798\uecb8\uc7ae\u694b\uaba9\u670a\u47f2" +
    "\ub522\ue5ee\ube2b\u8112\u831b\u0e23\uf545\u21ce" +
    "\u492c\uf9e6\ub628\u1782\u1a8b\ufe8a\u09c9\u874e" +
    "\ue12e\ue4e0\ueb90\ua41e\u8560\u0025\uf4f1\u940b" +
    "\ue775\uef34\u31d4\ud086\u7ead\ufd29\u303b\u9ff8" +
    "\uc613\u0605\uc511\u777c\u7a78\u361c\u3959\u1856" +
    "\ub3b0\u2420\ub292\ua3c0\u4462\u10b4\u8443\u93c2" +
    "\u4abd\u8f2d\ubc9c\u6a40\ucfa2\u804f\u1fca\uaa42";
};
if ((Cipher) && (Cipher!=undefined)) {
  Cipher.AddCipher(Khazad);
} else {
  throwException('Missing Cipher Library Exception','Cipher::AddCipher','Khazad','Constructor');
};
